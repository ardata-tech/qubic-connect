{"version":3,"file":"154992c7-5ffdb66babe48904d0fc.js","mappings":"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","sources":["webpack://site/../../node_modules/@ardata-tech/qubic-js/dist/crypto/libFourQ_K12.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar encodedWasmFile = \"\";\nvar Module = typeof Module !== \"undefined\" ? Module : {};\nvar moduleOverrides = {};\nvar key;\nfor (key in Module) {\n    if (Module.hasOwnProperty(key)) {\n        moduleOverrides[key] = Module[key];\n    }\n}\nvar arguments_ = [];\nvar thisProgram = \"./this.program\";\nvar quit_ = function (status, toThrow) {\n    throw toThrow;\n};\nvar ENVIRONMENT_IS_WEB = typeof window === \"object\";\nvar ENVIRONMENT_IS_WORKER = typeof importScripts === \"function\";\nvar ENVIRONMENT_IS_NODE = typeof process === \"object\" &&\n    typeof process.versions === \"object\" &&\n    typeof process.versions.node === \"string\";\nvar scriptDirectory = \"\";\n/**\n * @param path\n */\nfunction locateFile(path) {\n    if (Module[\"locateFile\"]) {\n        return Module[\"locateFile\"](path, scriptDirectory);\n    }\n    return scriptDirectory + path;\n}\nvar read_, readAsync, readBinary, setWindowTitle;\n/**\n * @param e\n */\nfunction logExceptionOnExit(e) {\n    if (e instanceof ExitStatus)\n        return;\n    var toLog = e;\n    err(\"exiting due to exception: \" + toLog);\n}\nvar nodeFS;\nvar nodePath;\n// if (ENVIRONMENT_IS_NODE) {\n//   if (ENVIRONMENT_IS_WORKER) {\n//     scriptDirectory = require('path').dirname(scriptDirectory) + '/';\n//   } else {\n//     scriptDirectory = '/';\n//   }\n//   read_ = function shell_read(filename, binary) {\n//     if (!nodeFS) nodeFS = require('fs');\n//     if (!nodePath) nodePath = require('path');\n//     filename = nodePath['normalize'](filename);\n//     return nodeFS['readFileSync'](filename, binary ? null : 'utf8');\n//   };\n//   readBinary = function readBinary(filename) {\n//     var ret = read_(filename, true);\n//     if (!ret.buffer) {\n//       ret = new Uint8Array(ret);\n//     }\n//     assert(ret.buffer);\n//     return ret;\n//   };\n//   readAsync = function readAsync(filename, onload, onerror) {\n//     if (!nodeFS) nodeFS = require('fs');\n//     if (!nodePath) nodePath = require('path');\n//     filename = nodePath['normalize'](filename);\n//     nodeFS['readFile'](filename, function (err, data) {\n//       if (err) onerror(err);\n//       else onload(data.buffer);\n//     });\n//   };\n//   if (process['argv'].length > 1) {\n//     thisProgram = process['argv'][1].replace(/\\\\/g, '/');\n//   }\n//   arguments_ = process['argv'].slice(2);\n//   if (typeof module !== 'undefined') {\n//     module['exports'] = Module;\n//   }\n//   process['on']('uncaughtException', function (ex) {\n//     if (!(ex instanceof ExitStatus)) {\n//       throw ex;\n//     }\n//   });\n//   process['on']('unhandledRejection', function (reason) {\n//     throw reason;\n//   });\n//   quit_ = function (status, toThrow) {\n//     if (keepRuntimeAlive()) {\n//       process['exitCode'] = status;\n//       throw toThrow;\n//     }\n//     logExceptionOnExit(toThrow);\n//     process['exit'](status);\n//   };\n//   Module['inspect'] = function () {\n//     return '[Emscripten Module object]';\n//   };\n// } else\nif (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {\n    if (ENVIRONMENT_IS_WORKER) {\n        scriptDirectory = self.location.href;\n    }\n    else if (typeof document !== \"undefined\" && document.currentScript) {\n        scriptDirectory = document.currentScript.src;\n    }\n    if (scriptDirectory.indexOf(\"blob:\") !== 0) {\n        scriptDirectory = scriptDirectory.substr(0, scriptDirectory.replace(/[?#].*/, \"\").lastIndexOf(\"/\") + 1);\n    }\n    else {\n        scriptDirectory = \"\";\n    }\n    {\n        read_ = function (url) {\n            var xhr = new XMLHttpRequest();\n            xhr.open(\"GET\", url, false);\n            xhr.send(null);\n            return xhr.responseText;\n        };\n        if (ENVIRONMENT_IS_WORKER) {\n            readBinary = function (url) {\n                var xhr = new XMLHttpRequest();\n                xhr.open(\"GET\", url, false);\n                xhr.responseType = \"arraybuffer\";\n                xhr.send(null);\n                return new Uint8Array(xhr.response);\n            };\n        }\n        readAsync = function (url, onload, onerror) {\n            var xhr = new XMLHttpRequest();\n            xhr.open(\"GET\", url, true);\n            xhr.responseType = \"arraybuffer\";\n            xhr.onload = function () {\n                if (xhr.status == 200 || (xhr.status == 0 && xhr.response)) {\n                    onload(xhr.response);\n                    return;\n                }\n                onerror();\n            };\n            xhr.onerror = onerror;\n            xhr.send(null);\n        };\n    }\n    setWindowTitle = function (title) {\n        document.title = title;\n    };\n}\nelse {\n}\nvar out = Module[\"print\"] || console.log.bind(console);\nvar err = Module[\"printErr\"] || console.warn.bind(console);\nfor (key in moduleOverrides) {\n    if (moduleOverrides.hasOwnProperty(key)) {\n        Module[key] = moduleOverrides[key];\n    }\n}\nmoduleOverrides = null;\nif (Module[\"arguments\"])\n    arguments_ = Module[\"arguments\"];\nif (Module[\"thisProgram\"])\n    thisProgram = Module[\"thisProgram\"];\nif (Module[\"quit\"])\n    quit_ = Module[\"quit\"];\nvar wasmBinary;\nif (Module[\"wasmBinary\"])\n    wasmBinary = Module[\"wasmBinary\"];\nvar noExitRuntime = Module[\"noExitRuntime\"] || true;\nif (typeof WebAssembly !== \"object\") {\n    abort(\"no native wasm support detected\");\n}\nvar wasmMemory;\nvar ABORT = false;\nvar EXITSTATUS;\n/**\n * @param condition\n * @param text\n */\nfunction assert(condition, text) {\n    if (!condition) {\n        abort(\"Assertion failed: \" + text);\n    }\n}\nvar UTF8Decoder = typeof TextDecoder !== \"undefined\" ? new TextDecoder(\"utf8\") : undefined;\n/**\n * @param heap\n * @param idx\n * @param maxBytesToRead\n */\nfunction UTF8ArrayToString(heap, idx, maxBytesToRead) {\n    var endIdx = idx + maxBytesToRead;\n    var endPtr = idx;\n    while (heap[endPtr] && !(endPtr >= endIdx))\n        ++endPtr;\n    if (endPtr - idx > 16 && heap.subarray && UTF8Decoder) {\n        return UTF8Decoder.decode(heap.subarray(idx, endPtr));\n    }\n    else {\n        var str = \"\";\n        while (idx < endPtr) {\n            var u0 = heap[idx++];\n            if (!(u0 & 128)) {\n                str += String.fromCharCode(u0);\n                continue;\n            }\n            var u1 = heap[idx++] & 63;\n            if ((u0 & 224) == 192) {\n                str += String.fromCharCode(((u0 & 31) << 6) | u1);\n                continue;\n            }\n            var u2 = heap[idx++] & 63;\n            if ((u0 & 240) == 224) {\n                u0 = ((u0 & 15) << 12) | (u1 << 6) | u2;\n            }\n            else {\n                u0 = ((u0 & 7) << 18) | (u1 << 12) | (u2 << 6) | (heap[idx++] & 63);\n            }\n            if (u0 < 65536) {\n                str += String.fromCharCode(u0);\n            }\n            else {\n                var ch = u0 - 65536;\n                str += String.fromCharCode(55296 | (ch >> 10), 56320 | (ch & 1023));\n            }\n        }\n    }\n    return str;\n}\n/**\n * @param ptr\n * @param maxBytesToRead\n */\nfunction UTF8ToString(ptr, maxBytesToRead) {\n    return ptr ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead) : \"\";\n}\n/**\n * @param str\n * @param heap\n * @param outIdx\n * @param maxBytesToWrite\n */\nfunction stringToUTF8Array(str, heap, outIdx, maxBytesToWrite) {\n    if (!(maxBytesToWrite > 0))\n        return 0;\n    var startIdx = outIdx;\n    var endIdx = outIdx + maxBytesToWrite - 1;\n    for (var i = 0; i < str.length; ++i) {\n        var u = str.charCodeAt(i);\n        if (u >= 55296 && u <= 57343) {\n            var u1 = str.charCodeAt(++i);\n            u = (65536 + ((u & 1023) << 10)) | (u1 & 1023);\n        }\n        if (u <= 127) {\n            if (outIdx >= endIdx)\n                break;\n            heap[outIdx++] = u;\n        }\n        else if (u <= 2047) {\n            if (outIdx + 1 >= endIdx)\n                break;\n            heap[outIdx++] = 192 | (u >> 6);\n            heap[outIdx++] = 128 | (u & 63);\n        }\n        else if (u <= 65535) {\n            if (outIdx + 2 >= endIdx)\n                break;\n            heap[outIdx++] = 224 | (u >> 12);\n            heap[outIdx++] = 128 | ((u >> 6) & 63);\n            heap[outIdx++] = 128 | (u & 63);\n        }\n        else {\n            if (outIdx + 3 >= endIdx)\n                break;\n            heap[outIdx++] = 240 | (u >> 18);\n            heap[outIdx++] = 128 | ((u >> 12) & 63);\n            heap[outIdx++] = 128 | ((u >> 6) & 63);\n            heap[outIdx++] = 128 | (u & 63);\n        }\n    }\n    heap[outIdx] = 0;\n    return outIdx - startIdx;\n}\n/**\n * @param str\n * @param outPtr\n * @param maxBytesToWrite\n */\nfunction stringToUTF8(str, outPtr, maxBytesToWrite) {\n    return stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite);\n}\n/**\n * @param str\n */\nfunction lengthBytesUTF8(str) {\n    var len = 0;\n    for (var i = 0; i < str.length; ++i) {\n        var u = str.charCodeAt(i);\n        if (u >= 55296 && u <= 57343)\n            u = (65536 + ((u & 1023) << 10)) | (str.charCodeAt(++i) & 1023);\n        if (u <= 127)\n            ++len;\n        else if (u <= 2047)\n            len += 2;\n        else if (u <= 65535)\n            len += 3;\n        else\n            len += 4;\n    }\n    return len;\n}\nvar buffer, HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;\n/**\n * @param buf\n */\nfunction updateGlobalBufferAndViews(buf) {\n    buffer = buf;\n    Module[\"HEAP8\"] = HEAP8 = new Int8Array(buf);\n    Module[\"HEAP16\"] = HEAP16 = new Int16Array(buf);\n    Module[\"HEAP32\"] = HEAP32 = new Int32Array(buf);\n    Module[\"HEAPU8\"] = HEAPU8 = new Uint8Array(buf);\n    Module[\"HEAPU16\"] = HEAPU16 = new Uint16Array(buf);\n    Module[\"HEAPU32\"] = HEAPU32 = new Uint32Array(buf);\n    Module[\"HEAPF32\"] = HEAPF32 = new Float32Array(buf);\n    Module[\"HEAPF64\"] = HEAPF64 = new Float64Array(buf);\n}\nvar INITIAL_MEMORY = Module[\"INITIAL_MEMORY\"] || 16777216;\nvar wasmTable;\nvar __ATPRERUN__ = [];\nvar __ATINIT__ = [];\nvar __ATMAIN__ = [];\nvar __ATPOSTRUN__ = [];\nvar runtimeInitialized = false;\nvar runtimeExited = false;\nvar runtimeKeepaliveCounter = 0;\n/**\n *\n */\nfunction keepRuntimeAlive() {\n    return noExitRuntime || runtimeKeepaliveCounter > 0;\n}\n/**\n *\n */\nfunction preRun() {\n    if (Module[\"preRun\"]) {\n        if (typeof Module[\"preRun\"] == \"function\")\n            Module[\"preRun\"] = [Module[\"preRun\"]];\n        while (Module[\"preRun\"].length) {\n            addOnPreRun(Module[\"preRun\"].shift());\n        }\n    }\n    callRuntimeCallbacks(__ATPRERUN__);\n}\n/**\n *\n */\nfunction initRuntime() {\n    runtimeInitialized = true;\n    if (!Module[\"noFSInit\"] && !FS.init.initialized)\n        FS.init();\n    FS.ignorePermissions = false;\n    TTY.init();\n    callRuntimeCallbacks(__ATINIT__);\n}\n/**\n *\n */\nfunction preMain() {\n    callRuntimeCallbacks(__ATMAIN__);\n}\n/**\n *\n */\nfunction exitRuntime() {\n    runtimeExited = true;\n}\n/**\n *\n */\nfunction postRun() {\n    if (Module[\"postRun\"]) {\n        if (typeof Module[\"postRun\"] == \"function\")\n            Module[\"postRun\"] = [Module[\"postRun\"]];\n        while (Module[\"postRun\"].length) {\n            addOnPostRun(Module[\"postRun\"].shift());\n        }\n    }\n    callRuntimeCallbacks(__ATPOSTRUN__);\n}\n/**\n * @param cb\n */\nfunction addOnPreRun(cb) {\n    __ATPRERUN__.unshift(cb);\n}\n/**\n * @param cb\n */\nfunction addOnPostRun(cb) {\n    __ATPOSTRUN__.unshift(cb);\n}\nvar runDependencies = 0;\nvar runDependencyWatcher = null;\nvar dependenciesFulfilled = null;\n/**\n * @param id\n */\nfunction getUniqueRunDependency(id) {\n    return id;\n}\n/**\n * @param id\n */\nfunction addRunDependency(id) {\n    runDependencies++;\n    if (Module[\"monitorRunDependencies\"]) {\n        Module[\"monitorRunDependencies\"](runDependencies);\n    }\n}\n/**\n * @param id\n */\nfunction removeRunDependency(id) {\n    runDependencies--;\n    if (Module[\"monitorRunDependencies\"]) {\n        Module[\"monitorRunDependencies\"](runDependencies);\n    }\n    if (runDependencies == 0) {\n        if (runDependencyWatcher !== null) {\n            clearInterval(runDependencyWatcher);\n            runDependencyWatcher = null;\n        }\n        if (dependenciesFulfilled) {\n            var callback = dependenciesFulfilled;\n            dependenciesFulfilled = null;\n            callback();\n        }\n    }\n}\nModule[\"preloadedImages\"] = {};\nModule[\"preloadedAudios\"] = {};\n/**\n * @param what\n */\nfunction abort(what) {\n    {\n        if (Module[\"onAbort\"]) {\n            Module[\"onAbort\"](what);\n        }\n    }\n    what = \"Aborted(\" + what + \")\";\n    err(what);\n    ABORT = true;\n    EXITSTATUS = 1;\n    what += \". Build with -s ASSERTIONS=1 for more info.\";\n    var e = new WebAssembly.RuntimeError(what);\n    throw e;\n}\nvar dataURIPrefix = \"data:application/octet-stream;base64,\";\n/**\n * @param filename\n */\nfunction isDataURI(filename) {\n    return filename.startsWith(dataURIPrefix);\n}\n/**\n * @param filename\n */\nfunction isFileURI(filename) {\n    return filename.startsWith(\"file://\");\n}\nvar wasmBinaryFile;\nwasmBinaryFile = \"libFourQ.wasm\";\nif (!isDataURI(wasmBinaryFile)) {\n    wasmBinaryFile = locateFile(wasmBinaryFile);\n}\n/**\n * @param file\n */\nfunction getBinary(file) {\n    try {\n        if (file == wasmBinaryFile && wasmBinary) {\n            return new Uint8Array(wasmBinary);\n        }\n        if (readBinary) {\n            return readBinary(file);\n        }\n        else {\n            throw \"both async and sync fetching of the wasm failed\";\n        }\n    }\n    catch (err) {\n        abort(err);\n    }\n}\n/**\n *\n */\nfunction getBinaryPromise() {\n    if (!wasmBinary && (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER)) {\n        if (typeof fetch === \"function\" && !isFileURI(wasmBinaryFile)) {\n            return fetch(wasmBinaryFile, { credentials: \"same-origin\" })\n                .then(function (response) {\n                if (!response[\"ok\"]) {\n                    throw \"failed to load wasm binary file at '\" + wasmBinaryFile + \"'\";\n                }\n                return response[\"arrayBuffer\"]();\n            })\n                .catch(function () {\n                return getBinary(wasmBinaryFile);\n            });\n        }\n        else {\n            if (readAsync) {\n                return new Promise(function (resolve, reject) {\n                    readAsync(wasmBinaryFile, function (response) {\n                        resolve(new Uint8Array(response));\n                    }, reject);\n                });\n            }\n        }\n    }\n    return Promise.resolve().then(function () {\n        return getBinary(wasmBinaryFile);\n    });\n}\nfunction asciiToBinary(str) {\n    if (typeof atob === \"function\") {\n        return atob(str);\n    }\n    else {\n        return Buffer.from(str, \"base64\").toString(\"binary\");\n    }\n}\nfunction decode(encoded) {\n    var binaryString = asciiToBinary(encoded);\n    var bytes = new Uint8Array(binaryString.length);\n    for (var i = 0; i < binaryString.length; i++) {\n        bytes[i] = binaryString.charCodeAt(i);\n    }\n    return bytes.buffer;\n}\n/**\n *\n */\nfunction createWasm() {\n    var info = { env: asmLibraryArg, wasi_snapshot_preview1: asmLibraryArg };\n    /**\n     * @param instance\n     * @param module\n     */\n    function receiveInstance(instance, module) {\n        var exports = instance.exports;\n        Module[\"asm\"] = exports;\n        wasmMemory = Module[\"asm\"][\"memory\"];\n        updateGlobalBufferAndViews(wasmMemory.buffer);\n        wasmTable = Module[\"asm\"][\"__indirect_function_table\"];\n        removeRunDependency(\"wasm-instantiate\");\n    }\n    addRunDependency(\"wasm-instantiate\");\n    /**\n     * @param result\n     */\n    function receiveInstantiationResult(result) {\n        receiveInstance(result[\"instance\"]);\n    }\n    /**\n     * @param receiver\n     */\n    function instantiateArrayBuffer(receiver) {\n        return WebAssembly.instantiate(decode(encodedWasmFile), info)\n            .then(function (instance) {\n            return instance;\n        })\n            .then(receiver, function (reason) {\n            err(\"failed to asynchronously prepare wasm: \" + reason);\n            abort(reason);\n        });\n    }\n    /**\n     *\n     */\n    function instantiateAsync() {\n        return instantiateArrayBuffer(receiveInstantiationResult);\n    }\n    if (Module[\"instantiateWasm\"]) {\n        try {\n            var exports = Module[\"instantiateWasm\"](info, receiveInstance);\n            return exports;\n        }\n        catch (e) {\n            err(\"Module.instantiateWasm callback failed with error: \" + e);\n            return false;\n        }\n    }\n    instantiateAsync();\n    return {};\n}\nvar tempDouble;\nvar tempI64;\n/**\n * @param callbacks\n */\nfunction callRuntimeCallbacks(callbacks) {\n    while (callbacks.length > 0) {\n        var callback = callbacks.shift();\n        if (typeof callback == \"function\") {\n            callback(Module);\n            continue;\n        }\n        var func = callback.func;\n        if (typeof func === \"number\") {\n            if (callback.arg === undefined) {\n                getWasmTableEntry(func)();\n            }\n            else {\n                getWasmTableEntry(func)(callback.arg);\n            }\n        }\n        else {\n            func(callback.arg === undefined ? null : callback.arg);\n        }\n    }\n}\nvar wasmTableMirror = [];\n/**\n * @param funcPtr\n */\nfunction getWasmTableEntry(funcPtr) {\n    var func = wasmTableMirror[funcPtr];\n    if (!func) {\n        if (funcPtr >= wasmTableMirror.length)\n            wasmTableMirror.length = funcPtr + 1;\n        wasmTableMirror[funcPtr] = func = wasmTable.get(funcPtr);\n    }\n    return func;\n}\n/**\n * @param e\n */\nfunction handleException(e) {\n    if (e instanceof ExitStatus || e == \"unwind\") {\n        return EXITSTATUS;\n    }\n    quit_(1, e);\n}\nvar PATH = {\n    splitPath: function (filename) {\n        var splitPathRe = /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\n        return splitPathRe.exec(filename).slice(1);\n    },\n    normalizeArray: function (parts, allowAboveRoot) {\n        var up = 0;\n        for (var i = parts.length - 1; i >= 0; i--) {\n            var last = parts[i];\n            if (last === \".\") {\n                parts.splice(i, 1);\n            }\n            else if (last === \"..\") {\n                parts.splice(i, 1);\n                up++;\n            }\n            else if (up) {\n                parts.splice(i, 1);\n                up--;\n            }\n        }\n        if (allowAboveRoot) {\n            for (; up; up--) {\n                parts.unshift(\"..\");\n            }\n        }\n        return parts;\n    },\n    normalize: function (path) {\n        var isAbsolute = path.charAt(0) === \"/\", trailingSlash = path.substr(-1) === \"/\";\n        path = PATH.normalizeArray(path.split(\"/\").filter(function (p) {\n            return !!p;\n        }), !isAbsolute).join(\"/\");\n        if (!path && !isAbsolute) {\n            path = \".\";\n        }\n        if (path && trailingSlash) {\n            path += \"/\";\n        }\n        return (isAbsolute ? \"/\" : \"\") + path;\n    },\n    dirname: function (path) {\n        var result = PATH.splitPath(path), root = result[0], dir = result[1];\n        if (!root && !dir) {\n            return \".\";\n        }\n        if (dir) {\n            dir = dir.substr(0, dir.length - 1);\n        }\n        return root + dir;\n    },\n    basename: function (path) {\n        if (path === \"/\")\n            return \"/\";\n        path = PATH.normalize(path);\n        path = path.replace(/\\/$/, \"\");\n        var lastSlash = path.lastIndexOf(\"/\");\n        if (lastSlash === -1)\n            return path;\n        return path.substr(lastSlash + 1);\n    },\n    extname: function (path) {\n        return PATH.splitPath(path)[3];\n    },\n    join: function () {\n        var paths = Array.prototype.slice.call(arguments, 0);\n        return PATH.normalize(paths.join(\"/\"));\n    },\n    join2: function (l, r) {\n        return PATH.normalize(l + \"/\" + r);\n    },\n};\n/**\n *\n */\nfunction getRandomDevice() {\n    if (typeof crypto === \"object\" &&\n        typeof crypto[\"getRandomValues\"] === \"function\") {\n        var randomBuffer = new Uint8Array(1);\n        return function () {\n            crypto.getRandomValues(randomBuffer);\n            return randomBuffer[0];\n        };\n    }\n    // else if (ENVIRONMENT_IS_NODE) {\n    //   try {\n    //     var crypto_module = require('crypto');\n    //     return function () {\n    //       return crypto_module['randomBytes'](1)[0];\n    //     };\n    //   } catch (e) {}\n    // }\n    return function () {\n        abort(\"randomDevice\");\n    };\n}\nvar PATH_FS = {\n    resolve: function () {\n        var resolvedPath = \"\", resolvedAbsolute = false;\n        for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n            var path = i >= 0 ? arguments[i] : FS.cwd();\n            if (typeof path !== \"string\") {\n                throw new TypeError(\"Arguments to path.resolve must be strings\");\n            }\n            else if (!path) {\n                return \"\";\n            }\n            resolvedPath = path + \"/\" + resolvedPath;\n            resolvedAbsolute = path.charAt(0) === \"/\";\n        }\n        resolvedPath = PATH.normalizeArray(resolvedPath.split(\"/\").filter(function (p) {\n            return !!p;\n        }), !resolvedAbsolute).join(\"/\");\n        return (resolvedAbsolute ? \"/\" : \"\") + resolvedPath || \".\";\n    },\n    relative: function (from, to) {\n        from = PATH_FS.resolve(from).substr(1);\n        to = PATH_FS.resolve(to).substr(1);\n        /**\n         * @param arr\n         */\n        function trim(arr) {\n            var start = 0;\n            for (; start < arr.length; start++) {\n                if (arr[start] !== \"\")\n                    break;\n            }\n            var end = arr.length - 1;\n            for (; end >= 0; end--) {\n                if (arr[end] !== \"\")\n                    break;\n            }\n            if (start > end)\n                return [];\n            return arr.slice(start, end - start + 1);\n        }\n        var fromParts = trim(from.split(\"/\"));\n        var toParts = trim(to.split(\"/\"));\n        var length = Math.min(fromParts.length, toParts.length);\n        var samePartsLength = length;\n        for (var i = 0; i < length; i++) {\n            if (fromParts[i] !== toParts[i]) {\n                samePartsLength = i;\n                break;\n            }\n        }\n        var outputParts = [];\n        for (var i = samePartsLength; i < fromParts.length; i++) {\n            outputParts.push(\"..\");\n        }\n        outputParts = outputParts.concat(toParts.slice(samePartsLength));\n        return outputParts.join(\"/\");\n    },\n};\nvar TTY = {\n    ttys: [],\n    init: function () { },\n    shutdown: function () { },\n    register: function (dev, ops) {\n        TTY.ttys[dev] = { input: [], output: [], ops: ops };\n        FS.registerDevice(dev, TTY.stream_ops);\n    },\n    stream_ops: {\n        open: function (stream) {\n            var tty = TTY.ttys[stream.node.rdev];\n            if (!tty) {\n                throw new FS.ErrnoError(43);\n            }\n            stream.tty = tty;\n            stream.seekable = false;\n        },\n        close: function (stream) {\n            stream.tty.ops.flush(stream.tty);\n        },\n        flush: function (stream) {\n            stream.tty.ops.flush(stream.tty);\n        },\n        read: function (stream, buffer, offset, length, pos) {\n            if (!stream.tty || !stream.tty.ops.get_char) {\n                throw new FS.ErrnoError(60);\n            }\n            var bytesRead = 0;\n            for (var i = 0; i < length; i++) {\n                var result;\n                try {\n                    result = stream.tty.ops.get_char(stream.tty);\n                }\n                catch (e) {\n                    throw new FS.ErrnoError(29);\n                }\n                if (result === undefined && bytesRead === 0) {\n                    throw new FS.ErrnoError(6);\n                }\n                if (result === null || result === undefined)\n                    break;\n                bytesRead++;\n                buffer[offset + i] = result;\n            }\n            if (bytesRead) {\n                stream.node.timestamp = Date.now();\n            }\n            return bytesRead;\n        },\n        write: function (stream, buffer, offset, length, pos) {\n            if (!stream.tty || !stream.tty.ops.put_char) {\n                throw new FS.ErrnoError(60);\n            }\n            try {\n                for (var i = 0; i < length; i++) {\n                    stream.tty.ops.put_char(stream.tty, buffer[offset + i]);\n                }\n            }\n            catch (e) {\n                throw new FS.ErrnoError(29);\n            }\n            if (length) {\n                stream.node.timestamp = Date.now();\n            }\n            return i;\n        },\n    },\n    default_tty_ops: {\n        get_char: function (tty) {\n            if (!tty.input.length) {\n                var result = null;\n                if (ENVIRONMENT_IS_NODE) {\n                    var BUFSIZE = 256;\n                    var buf = Buffer.alloc(BUFSIZE);\n                    var bytesRead = 0;\n                    try {\n                        bytesRead = nodeFS.readSync(process.stdin.fd, buf, 0, BUFSIZE, null);\n                    }\n                    catch (e) {\n                        if (e.toString().includes(\"EOF\"))\n                            bytesRead = 0;\n                        else\n                            throw e;\n                    }\n                    if (bytesRead > 0) {\n                        result = buf.slice(0, bytesRead).toString(\"utf-8\");\n                    }\n                    else {\n                        result = null;\n                    }\n                }\n                else if (typeof window != \"undefined\" &&\n                    typeof window.prompt == \"function\") {\n                    result = window.prompt(\"Input: \");\n                    if (result !== null) {\n                        result += \"\\n\";\n                    }\n                }\n                else if (typeof readline == \"function\") {\n                    result = readline();\n                    if (result !== null) {\n                        result += \"\\n\";\n                    }\n                }\n                if (!result) {\n                    return null;\n                }\n                tty.input = intArrayFromString(result, true);\n            }\n            return tty.input.shift();\n        },\n        put_char: function (tty, val) {\n            if (val === null || val === 10) {\n                out(UTF8ArrayToString(tty.output, 0));\n                tty.output = [];\n            }\n            else {\n                if (val != 0)\n                    tty.output.push(val);\n            }\n        },\n        flush: function (tty) {\n            if (tty.output && tty.output.length > 0) {\n                out(UTF8ArrayToString(tty.output, 0));\n                tty.output = [];\n            }\n        },\n    },\n    default_tty1_ops: {\n        put_char: function (tty, val) {\n            if (val === null || val === 10) {\n                err(UTF8ArrayToString(tty.output, 0));\n                tty.output = [];\n            }\n            else {\n                if (val != 0)\n                    tty.output.push(val);\n            }\n        },\n        flush: function (tty) {\n            if (tty.output && tty.output.length > 0) {\n                err(UTF8ArrayToString(tty.output, 0));\n                tty.output = [];\n            }\n        },\n    },\n};\n/**\n * @param size\n */\nfunction mmapAlloc(size) {\n    abort();\n}\nvar MEMFS = {\n    ops_table: null,\n    mount: function (mount) {\n        return MEMFS.createNode(null, \"/\", 16384 | 511, 0);\n    },\n    createNode: function (parent, name, mode, dev) {\n        if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {\n            throw new FS.ErrnoError(63);\n        }\n        if (!MEMFS.ops_table) {\n            MEMFS.ops_table = {\n                dir: {\n                    node: {\n                        getattr: MEMFS.node_ops.getattr,\n                        setattr: MEMFS.node_ops.setattr,\n                        lookup: MEMFS.node_ops.lookup,\n                        mknod: MEMFS.node_ops.mknod,\n                        rename: MEMFS.node_ops.rename,\n                        unlink: MEMFS.node_ops.unlink,\n                        rmdir: MEMFS.node_ops.rmdir,\n                        readdir: MEMFS.node_ops.readdir,\n                        symlink: MEMFS.node_ops.symlink,\n                    },\n                    stream: { llseek: MEMFS.stream_ops.llseek },\n                },\n                file: {\n                    node: {\n                        getattr: MEMFS.node_ops.getattr,\n                        setattr: MEMFS.node_ops.setattr,\n                    },\n                    stream: {\n                        llseek: MEMFS.stream_ops.llseek,\n                        read: MEMFS.stream_ops.read,\n                        write: MEMFS.stream_ops.write,\n                        allocate: MEMFS.stream_ops.allocate,\n                        mmap: MEMFS.stream_ops.mmap,\n                        msync: MEMFS.stream_ops.msync,\n                    },\n                },\n                link: {\n                    node: {\n                        getattr: MEMFS.node_ops.getattr,\n                        setattr: MEMFS.node_ops.setattr,\n                        readlink: MEMFS.node_ops.readlink,\n                    },\n                    stream: {},\n                },\n                chrdev: {\n                    node: {\n                        getattr: MEMFS.node_ops.getattr,\n                        setattr: MEMFS.node_ops.setattr,\n                    },\n                    stream: FS.chrdev_stream_ops,\n                },\n            };\n        }\n        var node = FS.createNode(parent, name, mode, dev);\n        if (FS.isDir(node.mode)) {\n            node.node_ops = MEMFS.ops_table.dir.node;\n            node.stream_ops = MEMFS.ops_table.dir.stream;\n            node.contents = {};\n        }\n        else if (FS.isFile(node.mode)) {\n            node.node_ops = MEMFS.ops_table.file.node;\n            node.stream_ops = MEMFS.ops_table.file.stream;\n            node.usedBytes = 0;\n            node.contents = null;\n        }\n        else if (FS.isLink(node.mode)) {\n            node.node_ops = MEMFS.ops_table.link.node;\n            node.stream_ops = MEMFS.ops_table.link.stream;\n        }\n        else if (FS.isChrdev(node.mode)) {\n            node.node_ops = MEMFS.ops_table.chrdev.node;\n            node.stream_ops = MEMFS.ops_table.chrdev.stream;\n        }\n        node.timestamp = Date.now();\n        if (parent) {\n            parent.contents[name] = node;\n            parent.timestamp = node.timestamp;\n        }\n        return node;\n    },\n    getFileDataAsTypedArray: function (node) {\n        if (!node.contents)\n            return new Uint8Array(0);\n        if (node.contents.subarray)\n            return node.contents.subarray(0, node.usedBytes);\n        return new Uint8Array(node.contents);\n    },\n    expandFileStorage: function (node, newCapacity) {\n        var prevCapacity = node.contents ? node.contents.length : 0;\n        if (prevCapacity >= newCapacity)\n            return;\n        var CAPACITY_DOUBLING_MAX = 1024 * 1024;\n        newCapacity = Math.max(newCapacity, (prevCapacity * (prevCapacity < CAPACITY_DOUBLING_MAX ? 2 : 1.125)) >>> 0);\n        if (prevCapacity != 0)\n            newCapacity = Math.max(newCapacity, 256);\n        var oldContents = node.contents;\n        node.contents = new Uint8Array(newCapacity);\n        if (node.usedBytes > 0)\n            node.contents.set(oldContents.subarray(0, node.usedBytes), 0);\n    },\n    resizeFileStorage: function (node, newSize) {\n        if (node.usedBytes == newSize)\n            return;\n        if (newSize == 0) {\n            node.contents = null;\n            node.usedBytes = 0;\n        }\n        else {\n            var oldContents = node.contents;\n            node.contents = new Uint8Array(newSize);\n            if (oldContents) {\n                node.contents.set(oldContents.subarray(0, Math.min(newSize, node.usedBytes)));\n            }\n            node.usedBytes = newSize;\n        }\n    },\n    node_ops: {\n        getattr: function (node) {\n            var attr = {};\n            attr.dev = FS.isChrdev(node.mode) ? node.id : 1;\n            attr.ino = node.id;\n            attr.mode = node.mode;\n            attr.nlink = 1;\n            attr.uid = 0;\n            attr.gid = 0;\n            attr.rdev = node.rdev;\n            if (FS.isDir(node.mode)) {\n                attr.size = 4096;\n            }\n            else if (FS.isFile(node.mode)) {\n                attr.size = node.usedBytes;\n            }\n            else if (FS.isLink(node.mode)) {\n                attr.size = node.link.length;\n            }\n            else {\n                attr.size = 0;\n            }\n            attr.atime = new Date(node.timestamp);\n            attr.mtime = new Date(node.timestamp);\n            attr.ctime = new Date(node.timestamp);\n            attr.blksize = 4096;\n            attr.blocks = Math.ceil(attr.size / attr.blksize);\n            return attr;\n        },\n        setattr: function (node, attr) {\n            if (attr.mode !== undefined) {\n                node.mode = attr.mode;\n            }\n            if (attr.timestamp !== undefined) {\n                node.timestamp = attr.timestamp;\n            }\n            if (attr.size !== undefined) {\n                MEMFS.resizeFileStorage(node, attr.size);\n            }\n        },\n        lookup: function (parent, name) {\n            throw FS.genericErrors[44];\n        },\n        mknod: function (parent, name, mode, dev) {\n            return MEMFS.createNode(parent, name, mode, dev);\n        },\n        rename: function (old_node, new_dir, new_name) {\n            if (FS.isDir(old_node.mode)) {\n                var new_node;\n                try {\n                    new_node = FS.lookupNode(new_dir, new_name);\n                }\n                catch (e) { }\n                if (new_node) {\n                    for (var i in new_node.contents) {\n                        throw new FS.ErrnoError(55);\n                    }\n                }\n            }\n            delete old_node.parent.contents[old_node.name];\n            old_node.parent.timestamp = Date.now();\n            old_node.name = new_name;\n            new_dir.contents[new_name] = old_node;\n            new_dir.timestamp = old_node.parent.timestamp;\n            old_node.parent = new_dir;\n        },\n        unlink: function (parent, name) {\n            delete parent.contents[name];\n            parent.timestamp = Date.now();\n        },\n        rmdir: function (parent, name) {\n            var node = FS.lookupNode(parent, name);\n            for (var i in node.contents) {\n                throw new FS.ErrnoError(55);\n            }\n            delete parent.contents[name];\n            parent.timestamp = Date.now();\n        },\n        readdir: function (node) {\n            var entries = [\".\", \"..\"];\n            for (var key in node.contents) {\n                if (!node.contents.hasOwnProperty(key)) {\n                    continue;\n                }\n                entries.push(key);\n            }\n            return entries;\n        },\n        symlink: function (parent, newname, oldpath) {\n            var node = MEMFS.createNode(parent, newname, 511 | 40960, 0);\n            node.link = oldpath;\n            return node;\n        },\n        readlink: function (node) {\n            if (!FS.isLink(node.mode)) {\n                throw new FS.ErrnoError(28);\n            }\n            return node.link;\n        },\n    },\n    stream_ops: {\n        read: function (stream, buffer, offset, length, position) {\n            var contents = stream.node.contents;\n            if (position >= stream.node.usedBytes)\n                return 0;\n            var size = Math.min(stream.node.usedBytes - position, length);\n            if (size > 8 && contents.subarray) {\n                buffer.set(contents.subarray(position, position + size), offset);\n            }\n            else {\n                for (var i = 0; i < size; i++)\n                    buffer[offset + i] = contents[position + i];\n            }\n            return size;\n        },\n        write: function (stream, buffer, offset, length, position, canOwn) {\n            if (!length)\n                return 0;\n            var node = stream.node;\n            node.timestamp = Date.now();\n            if (buffer.subarray && (!node.contents || node.contents.subarray)) {\n                if (canOwn) {\n                    node.contents = buffer.subarray(offset, offset + length);\n                    node.usedBytes = length;\n                    return length;\n                }\n                else if (node.usedBytes === 0 && position === 0) {\n                    node.contents = buffer.slice(offset, offset + length);\n                    node.usedBytes = length;\n                    return length;\n                }\n                else if (position + length <= node.usedBytes) {\n                    node.contents.set(buffer.subarray(offset, offset + length), position);\n                    return length;\n                }\n            }\n            MEMFS.expandFileStorage(node, position + length);\n            if (node.contents.subarray && buffer.subarray) {\n                node.contents.set(buffer.subarray(offset, offset + length), position);\n            }\n            else {\n                for (var i = 0; i < length; i++) {\n                    node.contents[position + i] = buffer[offset + i];\n                }\n            }\n            node.usedBytes = Math.max(node.usedBytes, position + length);\n            return length;\n        },\n        llseek: function (stream, offset, whence) {\n            var position = offset;\n            if (whence === 1) {\n                position += stream.position;\n            }\n            else if (whence === 2) {\n                if (FS.isFile(stream.node.mode)) {\n                    position += stream.node.usedBytes;\n                }\n            }\n            if (position < 0) {\n                throw new FS.ErrnoError(28);\n            }\n            return position;\n        },\n        allocate: function (stream, offset, length) {\n            MEMFS.expandFileStorage(stream.node, offset + length);\n            stream.node.usedBytes = Math.max(stream.node.usedBytes, offset + length);\n        },\n        mmap: function (stream, address, length, position, prot, flags) {\n            if (address !== 0) {\n                throw new FS.ErrnoError(28);\n            }\n            if (!FS.isFile(stream.node.mode)) {\n                throw new FS.ErrnoError(43);\n            }\n            var ptr;\n            var allocated;\n            var contents = stream.node.contents;\n            if (!(flags & 2) && contents.buffer === buffer) {\n                allocated = false;\n                ptr = contents.byteOffset;\n            }\n            else {\n                if (position > 0 || position + length < contents.length) {\n                    if (contents.subarray) {\n                        contents = contents.subarray(position, position + length);\n                    }\n                    else {\n                        contents = Array.prototype.slice.call(contents, position, position + length);\n                    }\n                }\n                allocated = true;\n                ptr = mmapAlloc(length);\n                if (!ptr) {\n                    throw new FS.ErrnoError(48);\n                }\n                HEAP8.set(contents, ptr);\n            }\n            return { ptr: ptr, allocated: allocated };\n        },\n        msync: function (stream, buffer, offset, length, mmapFlags) {\n            if (!FS.isFile(stream.node.mode)) {\n                throw new FS.ErrnoError(43);\n            }\n            if (mmapFlags & 2) {\n                return 0;\n            }\n            var bytesWritten = MEMFS.stream_ops.write(stream, buffer, 0, length, offset, false);\n            return 0;\n        },\n    },\n};\n/**\n * @param url\n * @param onload\n * @param onerror\n * @param noRunDep\n */\nfunction asyncLoad(url, onload, onerror, noRunDep) {\n    var dep = !noRunDep ? getUniqueRunDependency(\"al \" + url) : \"\";\n    readAsync(url, function (arrayBuffer) {\n        assert(arrayBuffer, 'Loading data file \"' + url + '\" failed (no arrayBuffer).');\n        onload(new Uint8Array(arrayBuffer));\n        if (dep)\n            removeRunDependency(dep);\n    }, function (event) {\n        if (onerror) {\n            onerror();\n        }\n        else {\n            throw 'Loading data file \"' + url + '\" failed.';\n        }\n    });\n    if (dep)\n        addRunDependency(dep);\n}\nvar FS = {\n    root: null,\n    mounts: [],\n    devices: {},\n    streams: [],\n    nextInode: 1,\n    nameTable: null,\n    currentPath: \"/\",\n    initialized: false,\n    ignorePermissions: true,\n    ErrnoError: null,\n    genericErrors: {},\n    filesystems: null,\n    syncFSRequests: 0,\n    lookupPath: function (path, opts) {\n        path = PATH_FS.resolve(FS.cwd(), path);\n        opts = opts || {};\n        if (!path)\n            return { path: \"\", node: null };\n        var defaults = { follow_mount: true, recurse_count: 0 };\n        for (var key in defaults) {\n            if (opts[key] === undefined) {\n                opts[key] = defaults[key];\n            }\n        }\n        if (opts.recurse_count > 8) {\n            throw new FS.ErrnoError(32);\n        }\n        var parts = PATH.normalizeArray(path.split(\"/\").filter(function (p) {\n            return !!p;\n        }), false);\n        var current = FS.root;\n        var current_path = \"/\";\n        for (var i = 0; i < parts.length; i++) {\n            var islast = i === parts.length - 1;\n            if (islast && opts.parent) {\n                break;\n            }\n            current = FS.lookupNode(current, parts[i]);\n            current_path = PATH.join2(current_path, parts[i]);\n            if (FS.isMountpoint(current)) {\n                if (!islast || (islast && opts.follow_mount)) {\n                    current = current.mounted.root;\n                }\n            }\n            if (!islast || opts.follow) {\n                var count = 0;\n                while (FS.isLink(current.mode)) {\n                    var link = FS.readlink(current_path);\n                    current_path = PATH_FS.resolve(PATH.dirname(current_path), link);\n                    var lookup = FS.lookupPath(current_path, {\n                        recurse_count: opts.recurse_count,\n                    });\n                    current = lookup.node;\n                    if (count++ > 40) {\n                        throw new FS.ErrnoError(32);\n                    }\n                }\n            }\n        }\n        return { path: current_path, node: current };\n    },\n    getPath: function (node) {\n        var path;\n        while (true) {\n            if (FS.isRoot(node)) {\n                var mount = node.mount.mountpoint;\n                if (!path)\n                    return mount;\n                return mount[mount.length - 1] !== \"/\"\n                    ? mount + \"/\" + path\n                    : mount + path;\n            }\n            path = path ? node.name + \"/\" + path : node.name;\n            node = node.parent;\n        }\n    },\n    hashName: function (parentid, name) {\n        var hash = 0;\n        for (var i = 0; i < name.length; i++) {\n            hash = ((hash << 5) - hash + name.charCodeAt(i)) | 0;\n        }\n        return ((parentid + hash) >>> 0) % FS.nameTable.length;\n    },\n    hashAddNode: function (node) {\n        var hash = FS.hashName(node.parent.id, node.name);\n        node.name_next = FS.nameTable[hash];\n        FS.nameTable[hash] = node;\n    },\n    hashRemoveNode: function (node) {\n        var hash = FS.hashName(node.parent.id, node.name);\n        if (FS.nameTable[hash] === node) {\n            FS.nameTable[hash] = node.name_next;\n        }\n        else {\n            var current = FS.nameTable[hash];\n            while (current) {\n                if (current.name_next === node) {\n                    current.name_next = node.name_next;\n                    break;\n                }\n                current = current.name_next;\n            }\n        }\n    },\n    lookupNode: function (parent, name) {\n        var errCode = FS.mayLookup(parent);\n        if (errCode) {\n            throw new FS.ErrnoError(errCode, parent);\n        }\n        var hash = FS.hashName(parent.id, name);\n        for (var node = FS.nameTable[hash]; node; node = node.name_next) {\n            var nodeName = node.name;\n            if (node.parent.id === parent.id && nodeName === name) {\n                return node;\n            }\n        }\n        return FS.lookup(parent, name);\n    },\n    createNode: function (parent, name, mode, rdev) {\n        var node = new FS.FSNode(parent, name, mode, rdev);\n        FS.hashAddNode(node);\n        return node;\n    },\n    destroyNode: function (node) {\n        FS.hashRemoveNode(node);\n    },\n    isRoot: function (node) {\n        return node === node.parent;\n    },\n    isMountpoint: function (node) {\n        return !!node.mounted;\n    },\n    isFile: function (mode) {\n        return (mode & 61440) === 32768;\n    },\n    isDir: function (mode) {\n        return (mode & 61440) === 16384;\n    },\n    isLink: function (mode) {\n        return (mode & 61440) === 40960;\n    },\n    isChrdev: function (mode) {\n        return (mode & 61440) === 8192;\n    },\n    isBlkdev: function (mode) {\n        return (mode & 61440) === 24576;\n    },\n    isFIFO: function (mode) {\n        return (mode & 61440) === 4096;\n    },\n    isSocket: function (mode) {\n        return (mode & 49152) === 49152;\n    },\n    flagModes: { r: 0, \"r+\": 2, w: 577, \"w+\": 578, a: 1089, \"a+\": 1090 },\n    modeStringToFlags: function (str) {\n        var flags = FS.flagModes[str];\n        if (typeof flags === \"undefined\") {\n            throw new Error(\"Unknown file open mode: \" + str);\n        }\n        return flags;\n    },\n    flagsToPermissionString: function (flag) {\n        var perms = [\"r\", \"w\", \"rw\"][flag & 3];\n        if (flag & 512) {\n            perms += \"w\";\n        }\n        return perms;\n    },\n    nodePermissions: function (node, perms) {\n        if (FS.ignorePermissions) {\n            return 0;\n        }\n        if (perms.includes(\"r\") && !(node.mode & 292)) {\n            return 2;\n        }\n        else if (perms.includes(\"w\") && !(node.mode & 146)) {\n            return 2;\n        }\n        else if (perms.includes(\"x\") && !(node.mode & 73)) {\n            return 2;\n        }\n        return 0;\n    },\n    mayLookup: function (dir) {\n        var errCode = FS.nodePermissions(dir, \"x\");\n        if (errCode)\n            return errCode;\n        if (!dir.node_ops.lookup)\n            return 2;\n        return 0;\n    },\n    mayCreate: function (dir, name) {\n        try {\n            var node = FS.lookupNode(dir, name);\n            return 20;\n        }\n        catch (e) { }\n        return FS.nodePermissions(dir, \"wx\");\n    },\n    mayDelete: function (dir, name, isdir) {\n        var node;\n        try {\n            node = FS.lookupNode(dir, name);\n        }\n        catch (e) {\n            return e.errno;\n        }\n        var errCode = FS.nodePermissions(dir, \"wx\");\n        if (errCode) {\n            return errCode;\n        }\n        if (isdir) {\n            if (!FS.isDir(node.mode)) {\n                return 54;\n            }\n            if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {\n                return 10;\n            }\n        }\n        else {\n            if (FS.isDir(node.mode)) {\n                return 31;\n            }\n        }\n        return 0;\n    },\n    mayOpen: function (node, flags) {\n        if (!node) {\n            return 44;\n        }\n        if (FS.isLink(node.mode)) {\n            return 32;\n        }\n        else if (FS.isDir(node.mode)) {\n            if (FS.flagsToPermissionString(flags) !== \"r\" || flags & 512) {\n                return 31;\n            }\n        }\n        return FS.nodePermissions(node, FS.flagsToPermissionString(flags));\n    },\n    MAX_OPEN_FDS: 4096,\n    nextfd: function (fd_start, fd_end) {\n        fd_start = fd_start || 0;\n        fd_end = fd_end || FS.MAX_OPEN_FDS;\n        for (var fd = fd_start; fd <= fd_end; fd++) {\n            if (!FS.streams[fd]) {\n                return fd;\n            }\n        }\n        throw new FS.ErrnoError(33);\n    },\n    getStream: function (fd) {\n        return FS.streams[fd];\n    },\n    createStream: function (stream, fd_start, fd_end) {\n        if (!FS.FSStream) {\n            FS.FSStream = function () { };\n            FS.FSStream.prototype = {\n                object: {\n                    get: function () {\n                        return this.node;\n                    },\n                    set: function (val) {\n                        this.node = val;\n                    },\n                },\n                isRead: {\n                    get: function () {\n                        return (this.flags & 2097155) !== 1;\n                    },\n                },\n                isWrite: {\n                    get: function () {\n                        return (this.flags & 2097155) !== 0;\n                    },\n                },\n                isAppend: {\n                    get: function () {\n                        return this.flags & 1024;\n                    },\n                },\n            };\n        }\n        var newStream = new FS.FSStream();\n        for (var p in stream) {\n            newStream[p] = stream[p];\n        }\n        stream = newStream;\n        var fd = FS.nextfd(fd_start, fd_end);\n        stream.fd = fd;\n        FS.streams[fd] = stream;\n        return stream;\n    },\n    closeStream: function (fd) {\n        FS.streams[fd] = null;\n    },\n    chrdev_stream_ops: {\n        open: function (stream) {\n            var device = FS.getDevice(stream.node.rdev);\n            stream.stream_ops = device.stream_ops;\n            if (stream.stream_ops.open) {\n                stream.stream_ops.open(stream);\n            }\n        },\n        llseek: function () {\n            throw new FS.ErrnoError(70);\n        },\n    },\n    major: function (dev) {\n        return dev >> 8;\n    },\n    minor: function (dev) {\n        return dev & 255;\n    },\n    makedev: function (ma, mi) {\n        return (ma << 8) | mi;\n    },\n    registerDevice: function (dev, ops) {\n        FS.devices[dev] = { stream_ops: ops };\n    },\n    getDevice: function (dev) {\n        return FS.devices[dev];\n    },\n    getMounts: function (mount) {\n        var mounts = [];\n        var check = [mount];\n        while (check.length) {\n            var m = check.pop();\n            mounts.push(m);\n            check.push.apply(check, m.mounts);\n        }\n        return mounts;\n    },\n    syncfs: function (populate, callback) {\n        if (typeof populate === \"function\") {\n            callback = populate;\n            populate = false;\n        }\n        FS.syncFSRequests++;\n        if (FS.syncFSRequests > 1) {\n            err(\"warning: \" +\n                FS.syncFSRequests +\n                \" FS.syncfs operations in flight at once, probably just doing extra work\");\n        }\n        var mounts = FS.getMounts(FS.root.mount);\n        var completed = 0;\n        /**\n         * @param errCode\n         */\n        function doCallback(errCode) {\n            FS.syncFSRequests--;\n            return callback(errCode);\n        }\n        /**\n         * @param errCode\n         */\n        function done(errCode) {\n            if (errCode) {\n                if (!done.errored) {\n                    done.errored = true;\n                    return doCallback(errCode);\n                }\n                return;\n            }\n            if (++completed >= mounts.length) {\n                doCallback(null);\n            }\n        }\n        mounts.forEach(function (mount) {\n            if (!mount.type.syncfs) {\n                return done(null);\n            }\n            mount.type.syncfs(mount, populate, done);\n        });\n    },\n    mount: function (type, opts, mountpoint) {\n        var root = mountpoint === \"/\";\n        var pseudo = !mountpoint;\n        var node;\n        if (root && FS.root) {\n            throw new FS.ErrnoError(10);\n        }\n        else if (!root && !pseudo) {\n            var lookup = FS.lookupPath(mountpoint, { follow_mount: false });\n            mountpoint = lookup.path;\n            node = lookup.node;\n            if (FS.isMountpoint(node)) {\n                throw new FS.ErrnoError(10);\n            }\n            if (!FS.isDir(node.mode)) {\n                throw new FS.ErrnoError(54);\n            }\n        }\n        var mount = { type: type, opts: opts, mountpoint: mountpoint, mounts: [] };\n        var mountRoot = type.mount(mount);\n        mountRoot.mount = mount;\n        mount.root = mountRoot;\n        if (root) {\n            FS.root = mountRoot;\n        }\n        else if (node) {\n            node.mounted = mount;\n            if (node.mount) {\n                node.mount.mounts.push(mount);\n            }\n        }\n        return mountRoot;\n    },\n    unmount: function (mountpoint) {\n        var lookup = FS.lookupPath(mountpoint, { follow_mount: false });\n        if (!FS.isMountpoint(lookup.node)) {\n            throw new FS.ErrnoError(28);\n        }\n        var node = lookup.node;\n        var mount = node.mounted;\n        var mounts = FS.getMounts(mount);\n        Object.keys(FS.nameTable).forEach(function (hash) {\n            var current = FS.nameTable[hash];\n            while (current) {\n                var next = current.name_next;\n                if (mounts.includes(current.mount)) {\n                    FS.destroyNode(current);\n                }\n                current = next;\n            }\n        });\n        node.mounted = null;\n        var idx = node.mount.mounts.indexOf(mount);\n        node.mount.mounts.splice(idx, 1);\n    },\n    lookup: function (parent, name) {\n        return parent.node_ops.lookup(parent, name);\n    },\n    mknod: function (path, mode, dev) {\n        var lookup = FS.lookupPath(path, { parent: true });\n        var parent = lookup.node;\n        var name = PATH.basename(path);\n        if (!name || name === \".\" || name === \"..\") {\n            throw new FS.ErrnoError(28);\n        }\n        var errCode = FS.mayCreate(parent, name);\n        if (errCode) {\n            throw new FS.ErrnoError(errCode);\n        }\n        if (!parent.node_ops.mknod) {\n            throw new FS.ErrnoError(63);\n        }\n        return parent.node_ops.mknod(parent, name, mode, dev);\n    },\n    create: function (path, mode) {\n        mode = mode !== undefined ? mode : 438;\n        mode &= 4095;\n        mode |= 32768;\n        return FS.mknod(path, mode, 0);\n    },\n    mkdir: function (path, mode) {\n        mode = mode !== undefined ? mode : 511;\n        mode &= 511 | 512;\n        mode |= 16384;\n        return FS.mknod(path, mode, 0);\n    },\n    mkdirTree: function (path, mode) {\n        var dirs = path.split(\"/\");\n        var d = \"\";\n        for (var i = 0; i < dirs.length; ++i) {\n            if (!dirs[i])\n                continue;\n            d += \"/\" + dirs[i];\n            try {\n                FS.mkdir(d, mode);\n            }\n            catch (e) {\n                if (e.errno != 20)\n                    throw e;\n            }\n        }\n    },\n    mkdev: function (path, mode, dev) {\n        if (typeof dev === \"undefined\") {\n            dev = mode;\n            mode = 438;\n        }\n        mode |= 8192;\n        return FS.mknod(path, mode, dev);\n    },\n    symlink: function (oldpath, newpath) {\n        if (!PATH_FS.resolve(oldpath)) {\n            throw new FS.ErrnoError(44);\n        }\n        var lookup = FS.lookupPath(newpath, { parent: true });\n        var parent = lookup.node;\n        if (!parent) {\n            throw new FS.ErrnoError(44);\n        }\n        var newname = PATH.basename(newpath);\n        var errCode = FS.mayCreate(parent, newname);\n        if (errCode) {\n            throw new FS.ErrnoError(errCode);\n        }\n        if (!parent.node_ops.symlink) {\n            throw new FS.ErrnoError(63);\n        }\n        return parent.node_ops.symlink(parent, newname, oldpath);\n    },\n    rename: function (old_path, new_path) {\n        var old_dirname = PATH.dirname(old_path);\n        var new_dirname = PATH.dirname(new_path);\n        var old_name = PATH.basename(old_path);\n        var new_name = PATH.basename(new_path);\n        var lookup, old_dir, new_dir;\n        lookup = FS.lookupPath(old_path, { parent: true });\n        old_dir = lookup.node;\n        lookup = FS.lookupPath(new_path, { parent: true });\n        new_dir = lookup.node;\n        if (!old_dir || !new_dir)\n            throw new FS.ErrnoError(44);\n        if (old_dir.mount !== new_dir.mount) {\n            throw new FS.ErrnoError(75);\n        }\n        var old_node = FS.lookupNode(old_dir, old_name);\n        var relative = PATH_FS.relative(old_path, new_dirname);\n        if (relative.charAt(0) !== \".\") {\n            throw new FS.ErrnoError(28);\n        }\n        relative = PATH_FS.relative(new_path, old_dirname);\n        if (relative.charAt(0) !== \".\") {\n            throw new FS.ErrnoError(55);\n        }\n        var new_node;\n        try {\n            new_node = FS.lookupNode(new_dir, new_name);\n        }\n        catch (e) { }\n        if (old_node === new_node) {\n            return;\n        }\n        var isdir = FS.isDir(old_node.mode);\n        var errCode = FS.mayDelete(old_dir, old_name, isdir);\n        if (errCode) {\n            throw new FS.ErrnoError(errCode);\n        }\n        errCode = new_node\n            ? FS.mayDelete(new_dir, new_name, isdir)\n            : FS.mayCreate(new_dir, new_name);\n        if (errCode) {\n            throw new FS.ErrnoError(errCode);\n        }\n        if (!old_dir.node_ops.rename) {\n            throw new FS.ErrnoError(63);\n        }\n        if (FS.isMountpoint(old_node) || (new_node && FS.isMountpoint(new_node))) {\n            throw new FS.ErrnoError(10);\n        }\n        if (new_dir !== old_dir) {\n            errCode = FS.nodePermissions(old_dir, \"w\");\n            if (errCode) {\n                throw new FS.ErrnoError(errCode);\n            }\n        }\n        FS.hashRemoveNode(old_node);\n        try {\n            old_dir.node_ops.rename(old_node, new_dir, new_name);\n        }\n        catch (e) {\n            throw e;\n        }\n        finally {\n            FS.hashAddNode(old_node);\n        }\n    },\n    rmdir: function (path) {\n        var lookup = FS.lookupPath(path, { parent: true });\n        var parent = lookup.node;\n        var name = PATH.basename(path);\n        var node = FS.lookupNode(parent, name);\n        var errCode = FS.mayDelete(parent, name, true);\n        if (errCode) {\n            throw new FS.ErrnoError(errCode);\n        }\n        if (!parent.node_ops.rmdir) {\n            throw new FS.ErrnoError(63);\n        }\n        if (FS.isMountpoint(node)) {\n            throw new FS.ErrnoError(10);\n        }\n        parent.node_ops.rmdir(parent, name);\n        FS.destroyNode(node);\n    },\n    readdir: function (path) {\n        var lookup = FS.lookupPath(path, { follow: true });\n        var node = lookup.node;\n        if (!node.node_ops.readdir) {\n            throw new FS.ErrnoError(54);\n        }\n        return node.node_ops.readdir(node);\n    },\n    unlink: function (path) {\n        var lookup = FS.lookupPath(path, { parent: true });\n        var parent = lookup.node;\n        var name = PATH.basename(path);\n        var node = FS.lookupNode(parent, name);\n        var errCode = FS.mayDelete(parent, name, false);\n        if (errCode) {\n            throw new FS.ErrnoError(errCode);\n        }\n        if (!parent.node_ops.unlink) {\n            throw new FS.ErrnoError(63);\n        }\n        if (FS.isMountpoint(node)) {\n            throw new FS.ErrnoError(10);\n        }\n        parent.node_ops.unlink(parent, name);\n        FS.destroyNode(node);\n    },\n    readlink: function (path) {\n        var lookup = FS.lookupPath(path);\n        var link = lookup.node;\n        if (!link) {\n            throw new FS.ErrnoError(44);\n        }\n        if (!link.node_ops.readlink) {\n            throw new FS.ErrnoError(28);\n        }\n        return PATH_FS.resolve(FS.getPath(link.parent), link.node_ops.readlink(link));\n    },\n    stat: function (path, dontFollow) {\n        var lookup = FS.lookupPath(path, { follow: !dontFollow });\n        var node = lookup.node;\n        if (!node) {\n            throw new FS.ErrnoError(44);\n        }\n        if (!node.node_ops.getattr) {\n            throw new FS.ErrnoError(63);\n        }\n        return node.node_ops.getattr(node);\n    },\n    lstat: function (path) {\n        return FS.stat(path, true);\n    },\n    chmod: function (path, mode, dontFollow) {\n        var node;\n        if (typeof path === \"string\") {\n            var lookup = FS.lookupPath(path, { follow: !dontFollow });\n            node = lookup.node;\n        }\n        else {\n            node = path;\n        }\n        if (!node.node_ops.setattr) {\n            throw new FS.ErrnoError(63);\n        }\n        node.node_ops.setattr(node, {\n            mode: (mode & 4095) | (node.mode & ~4095),\n            timestamp: Date.now(),\n        });\n    },\n    lchmod: function (path, mode) {\n        FS.chmod(path, mode, true);\n    },\n    fchmod: function (fd, mode) {\n        var stream = FS.getStream(fd);\n        if (!stream) {\n            throw new FS.ErrnoError(8);\n        }\n        FS.chmod(stream.node, mode);\n    },\n    chown: function (path, uid, gid, dontFollow) {\n        var node;\n        if (typeof path === \"string\") {\n            var lookup = FS.lookupPath(path, { follow: !dontFollow });\n            node = lookup.node;\n        }\n        else {\n            node = path;\n        }\n        if (!node.node_ops.setattr) {\n            throw new FS.ErrnoError(63);\n        }\n        node.node_ops.setattr(node, { timestamp: Date.now() });\n    },\n    lchown: function (path, uid, gid) {\n        FS.chown(path, uid, gid, true);\n    },\n    fchown: function (fd, uid, gid) {\n        var stream = FS.getStream(fd);\n        if (!stream) {\n            throw new FS.ErrnoError(8);\n        }\n        FS.chown(stream.node, uid, gid);\n    },\n    truncate: function (path, len) {\n        if (len < 0) {\n            throw new FS.ErrnoError(28);\n        }\n        var node;\n        if (typeof path === \"string\") {\n            var lookup = FS.lookupPath(path, { follow: true });\n            node = lookup.node;\n        }\n        else {\n            node = path;\n        }\n        if (!node.node_ops.setattr) {\n            throw new FS.ErrnoError(63);\n        }\n        if (FS.isDir(node.mode)) {\n            throw new FS.ErrnoError(31);\n        }\n        if (!FS.isFile(node.mode)) {\n            throw new FS.ErrnoError(28);\n        }\n        var errCode = FS.nodePermissions(node, \"w\");\n        if (errCode) {\n            throw new FS.ErrnoError(errCode);\n        }\n        node.node_ops.setattr(node, { size: len, timestamp: Date.now() });\n    },\n    ftruncate: function (fd, len) {\n        var stream = FS.getStream(fd);\n        if (!stream) {\n            throw new FS.ErrnoError(8);\n        }\n        if ((stream.flags & 2097155) === 0) {\n            throw new FS.ErrnoError(28);\n        }\n        FS.truncate(stream.node, len);\n    },\n    utime: function (path, atime, mtime) {\n        var lookup = FS.lookupPath(path, { follow: true });\n        var node = lookup.node;\n        node.node_ops.setattr(node, { timestamp: Math.max(atime, mtime) });\n    },\n    open: function (path, flags, mode, fd_start, fd_end) {\n        if (path === \"\") {\n            throw new FS.ErrnoError(44);\n        }\n        flags = typeof flags === \"string\" ? FS.modeStringToFlags(flags) : flags;\n        mode = typeof mode === \"undefined\" ? 438 : mode;\n        if (flags & 64) {\n            mode = (mode & 4095) | 32768;\n        }\n        else {\n            mode = 0;\n        }\n        var node;\n        if (typeof path === \"object\") {\n            node = path;\n        }\n        else {\n            path = PATH.normalize(path);\n            try {\n                var lookup = FS.lookupPath(path, { follow: !(flags & 131072) });\n                node = lookup.node;\n            }\n            catch (e) { }\n        }\n        var created = false;\n        if (flags & 64) {\n            if (node) {\n                if (flags & 128) {\n                    throw new FS.ErrnoError(20);\n                }\n            }\n            else {\n                node = FS.mknod(path, mode, 0);\n                created = true;\n            }\n        }\n        if (!node) {\n            throw new FS.ErrnoError(44);\n        }\n        if (FS.isChrdev(node.mode)) {\n            flags &= ~512;\n        }\n        if (flags & 65536 && !FS.isDir(node.mode)) {\n            throw new FS.ErrnoError(54);\n        }\n        if (!created) {\n            var errCode = FS.mayOpen(node, flags);\n            if (errCode) {\n                throw new FS.ErrnoError(errCode);\n            }\n        }\n        if (flags & 512) {\n            FS.truncate(node, 0);\n        }\n        flags &= ~(128 | 512 | 131072);\n        var stream = FS.createStream({\n            node: node,\n            path: FS.getPath(node),\n            id: node.id,\n            flags: flags,\n            mode: node.mode,\n            seekable: true,\n            position: 0,\n            stream_ops: node.stream_ops,\n            node_ops: node.node_ops,\n            ungotten: [],\n            error: false,\n        }, fd_start, fd_end);\n        if (stream.stream_ops.open) {\n            stream.stream_ops.open(stream);\n        }\n        if (Module[\"logReadFiles\"] && !(flags & 1)) {\n            if (!FS.readFiles)\n                FS.readFiles = {};\n            if (!(path in FS.readFiles)) {\n                FS.readFiles[path] = 1;\n            }\n        }\n        return stream;\n    },\n    close: function (stream) {\n        if (FS.isClosed(stream)) {\n            throw new FS.ErrnoError(8);\n        }\n        if (stream.getdents)\n            stream.getdents = null;\n        try {\n            if (stream.stream_ops.close) {\n                stream.stream_ops.close(stream);\n            }\n        }\n        catch (e) {\n            throw e;\n        }\n        finally {\n            FS.closeStream(stream.fd);\n        }\n        stream.fd = null;\n    },\n    isClosed: function (stream) {\n        return stream.fd === null;\n    },\n    llseek: function (stream, offset, whence) {\n        if (FS.isClosed(stream)) {\n            throw new FS.ErrnoError(8);\n        }\n        if (!stream.seekable || !stream.stream_ops.llseek) {\n            throw new FS.ErrnoError(70);\n        }\n        if (whence != 0 && whence != 1 && whence != 2) {\n            throw new FS.ErrnoError(28);\n        }\n        stream.position = stream.stream_ops.llseek(stream, offset, whence);\n        stream.ungotten = [];\n        return stream.position;\n    },\n    read: function (stream, buffer, offset, length, position) {\n        if (length < 0 || position < 0) {\n            throw new FS.ErrnoError(28);\n        }\n        if (FS.isClosed(stream)) {\n            throw new FS.ErrnoError(8);\n        }\n        if ((stream.flags & 2097155) === 1) {\n            throw new FS.ErrnoError(8);\n        }\n        if (FS.isDir(stream.node.mode)) {\n            throw new FS.ErrnoError(31);\n        }\n        if (!stream.stream_ops.read) {\n            throw new FS.ErrnoError(28);\n        }\n        var seeking = typeof position !== \"undefined\";\n        if (!seeking) {\n            position = stream.position;\n        }\n        else if (!stream.seekable) {\n            throw new FS.ErrnoError(70);\n        }\n        var bytesRead = stream.stream_ops.read(stream, buffer, offset, length, position);\n        if (!seeking)\n            stream.position += bytesRead;\n        return bytesRead;\n    },\n    write: function (stream, buffer, offset, length, position, canOwn) {\n        if (length < 0 || position < 0) {\n            throw new FS.ErrnoError(28);\n        }\n        if (FS.isClosed(stream)) {\n            throw new FS.ErrnoError(8);\n        }\n        if ((stream.flags & 2097155) === 0) {\n            throw new FS.ErrnoError(8);\n        }\n        if (FS.isDir(stream.node.mode)) {\n            throw new FS.ErrnoError(31);\n        }\n        if (!stream.stream_ops.write) {\n            throw new FS.ErrnoError(28);\n        }\n        if (stream.seekable && stream.flags & 1024) {\n            FS.llseek(stream, 0, 2);\n        }\n        var seeking = typeof position !== \"undefined\";\n        if (!seeking) {\n            position = stream.position;\n        }\n        else if (!stream.seekable) {\n            throw new FS.ErrnoError(70);\n        }\n        var bytesWritten = stream.stream_ops.write(stream, buffer, offset, length, position, canOwn);\n        if (!seeking)\n            stream.position += bytesWritten;\n        return bytesWritten;\n    },\n    allocate: function (stream, offset, length) {\n        if (FS.isClosed(stream)) {\n            throw new FS.ErrnoError(8);\n        }\n        if (offset < 0 || length <= 0) {\n            throw new FS.ErrnoError(28);\n        }\n        if ((stream.flags & 2097155) === 0) {\n            throw new FS.ErrnoError(8);\n        }\n        if (!FS.isFile(stream.node.mode) && !FS.isDir(stream.node.mode)) {\n            throw new FS.ErrnoError(43);\n        }\n        if (!stream.stream_ops.allocate) {\n            throw new FS.ErrnoError(138);\n        }\n        stream.stream_ops.allocate(stream, offset, length);\n    },\n    mmap: function (stream, address, length, position, prot, flags) {\n        if ((prot & 2) !== 0 &&\n            (flags & 2) === 0 &&\n            (stream.flags & 2097155) !== 2) {\n            throw new FS.ErrnoError(2);\n        }\n        if ((stream.flags & 2097155) === 1) {\n            throw new FS.ErrnoError(2);\n        }\n        if (!stream.stream_ops.mmap) {\n            throw new FS.ErrnoError(43);\n        }\n        return stream.stream_ops.mmap(stream, address, length, position, prot, flags);\n    },\n    msync: function (stream, buffer, offset, length, mmapFlags) {\n        if (!stream || !stream.stream_ops.msync) {\n            return 0;\n        }\n        return stream.stream_ops.msync(stream, buffer, offset, length, mmapFlags);\n    },\n    munmap: function (stream) {\n        return 0;\n    },\n    ioctl: function (stream, cmd, arg) {\n        if (!stream.stream_ops.ioctl) {\n            throw new FS.ErrnoError(59);\n        }\n        return stream.stream_ops.ioctl(stream, cmd, arg);\n    },\n    readFile: function (path, opts) {\n        opts = opts || {};\n        opts.flags = opts.flags || 0;\n        opts.encoding = opts.encoding || \"binary\";\n        if (opts.encoding !== \"utf8\" && opts.encoding !== \"binary\") {\n            throw new Error('Invalid encoding type \"' + opts.encoding + '\"');\n        }\n        var ret;\n        var stream = FS.open(path, opts.flags);\n        var stat = FS.stat(path);\n        var length = stat.size;\n        var buf = new Uint8Array(length);\n        FS.read(stream, buf, 0, length, 0);\n        if (opts.encoding === \"utf8\") {\n            ret = UTF8ArrayToString(buf, 0);\n        }\n        else if (opts.encoding === \"binary\") {\n            ret = buf;\n        }\n        FS.close(stream);\n        return ret;\n    },\n    writeFile: function (path, data, opts) {\n        opts = opts || {};\n        opts.flags = opts.flags || 577;\n        var stream = FS.open(path, opts.flags, opts.mode);\n        if (typeof data === \"string\") {\n            var buf = new Uint8Array(lengthBytesUTF8(data) + 1);\n            var actualNumBytes = stringToUTF8Array(data, buf, 0, buf.length);\n            FS.write(stream, buf, 0, actualNumBytes, undefined, opts.canOwn);\n        }\n        else if (ArrayBuffer.isView(data)) {\n            FS.write(stream, data, 0, data.byteLength, undefined, opts.canOwn);\n        }\n        else {\n            throw new Error(\"Unsupported data type\");\n        }\n        FS.close(stream);\n    },\n    cwd: function () {\n        return FS.currentPath;\n    },\n    chdir: function (path) {\n        var lookup = FS.lookupPath(path, { follow: true });\n        if (lookup.node === null) {\n            throw new FS.ErrnoError(44);\n        }\n        if (!FS.isDir(lookup.node.mode)) {\n            throw new FS.ErrnoError(54);\n        }\n        var errCode = FS.nodePermissions(lookup.node, \"x\");\n        if (errCode) {\n            throw new FS.ErrnoError(errCode);\n        }\n        FS.currentPath = lookup.path;\n    },\n    createDefaultDirectories: function () {\n        FS.mkdir(\"/tmp\");\n        FS.mkdir(\"/home\");\n        FS.mkdir(\"/home/web_user\");\n    },\n    createDefaultDevices: function () {\n        FS.mkdir(\"/dev\");\n        FS.registerDevice(FS.makedev(1, 3), {\n            read: function () {\n                return 0;\n            },\n            write: function (stream, buffer, offset, length, pos) {\n                return length;\n            },\n        });\n        FS.mkdev(\"/dev/null\", FS.makedev(1, 3));\n        TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);\n        TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);\n        FS.mkdev(\"/dev/tty\", FS.makedev(5, 0));\n        FS.mkdev(\"/dev/tty1\", FS.makedev(6, 0));\n        var random_device = getRandomDevice();\n        FS.createDevice(\"/dev\", \"random\", random_device);\n        FS.createDevice(\"/dev\", \"urandom\", random_device);\n        FS.mkdir(\"/dev/shm\");\n        FS.mkdir(\"/dev/shm/tmp\");\n    },\n    createSpecialDirectories: function () {\n        FS.mkdir(\"/proc\");\n        var proc_self = FS.mkdir(\"/proc/self\");\n        FS.mkdir(\"/proc/self/fd\");\n        FS.mount({\n            mount: function () {\n                var node = FS.createNode(proc_self, \"fd\", 16384 | 511, 73);\n                node.node_ops = {\n                    lookup: function (parent, name) {\n                        var fd = +name;\n                        var stream = FS.getStream(fd);\n                        if (!stream)\n                            throw new FS.ErrnoError(8);\n                        var ret = {\n                            parent: null,\n                            mount: { mountpoint: \"fake\" },\n                            node_ops: {\n                                readlink: function () {\n                                    return stream.path;\n                                },\n                            },\n                        };\n                        ret.parent = ret;\n                        return ret;\n                    },\n                };\n                return node;\n            },\n        }, {}, \"/proc/self/fd\");\n    },\n    createStandardStreams: function () {\n        if (Module[\"stdin\"]) {\n            FS.createDevice(\"/dev\", \"stdin\", Module[\"stdin\"]);\n        }\n        else {\n            FS.symlink(\"/dev/tty\", \"/dev/stdin\");\n        }\n        if (Module[\"stdout\"]) {\n            FS.createDevice(\"/dev\", \"stdout\", null, Module[\"stdout\"]);\n        }\n        else {\n            FS.symlink(\"/dev/tty\", \"/dev/stdout\");\n        }\n        if (Module[\"stderr\"]) {\n            FS.createDevice(\"/dev\", \"stderr\", null, Module[\"stderr\"]);\n        }\n        else {\n            FS.symlink(\"/dev/tty1\", \"/dev/stderr\");\n        }\n        var stdin = FS.open(\"/dev/stdin\", 0);\n        var stdout = FS.open(\"/dev/stdout\", 1);\n        var stderr = FS.open(\"/dev/stderr\", 1);\n    },\n    ensureErrnoError: function () {\n        if (FS.ErrnoError)\n            return;\n        FS.ErrnoError = function ErrnoError(errno, node) {\n            this.node = node;\n            this.setErrno = function (errno) {\n                this.errno = errno;\n            };\n            this.setErrno(errno);\n            this.message = \"FS error\";\n        };\n        FS.ErrnoError.prototype = new Error();\n        FS.ErrnoError.prototype.constructor = FS.ErrnoError;\n        [44].forEach(function (code) {\n            FS.genericErrors[code] = new FS.ErrnoError(code);\n            FS.genericErrors[code].stack = \"<generic error, no stack>\";\n        });\n    },\n    staticInit: function () {\n        FS.ensureErrnoError();\n        FS.nameTable = new Array(4096);\n        FS.mount(MEMFS, {}, \"/\");\n        FS.createDefaultDirectories();\n        FS.createDefaultDevices();\n        FS.createSpecialDirectories();\n        FS.filesystems = { MEMFS: MEMFS };\n    },\n    init: function (input, output, error) {\n        FS.init.initialized = true;\n        FS.ensureErrnoError();\n        Module[\"stdin\"] = input || Module[\"stdin\"];\n        Module[\"stdout\"] = output || Module[\"stdout\"];\n        Module[\"stderr\"] = error || Module[\"stderr\"];\n        FS.createStandardStreams();\n    },\n    quit: function () {\n        FS.init.initialized = false;\n        var fflush = Module[\"_fflush\"];\n        if (fflush)\n            fflush(0);\n        for (var i = 0; i < FS.streams.length; i++) {\n            var stream = FS.streams[i];\n            if (!stream) {\n                continue;\n            }\n            FS.close(stream);\n        }\n    },\n    getMode: function (canRead, canWrite) {\n        var mode = 0;\n        if (canRead)\n            mode |= 292 | 73;\n        if (canWrite)\n            mode |= 146;\n        return mode;\n    },\n    findObject: function (path, dontResolveLastLink) {\n        var ret = FS.analyzePath(path, dontResolveLastLink);\n        if (ret.exists) {\n            return ret.object;\n        }\n        else {\n            return null;\n        }\n    },\n    analyzePath: function (path, dontResolveLastLink) {\n        try {\n            var lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });\n            path = lookup.path;\n        }\n        catch (e) { }\n        var ret = {\n            isRoot: false,\n            exists: false,\n            error: 0,\n            name: null,\n            path: null,\n            object: null,\n            parentExists: false,\n            parentPath: null,\n            parentObject: null,\n        };\n        try {\n            var lookup = FS.lookupPath(path, { parent: true });\n            ret.parentExists = true;\n            ret.parentPath = lookup.path;\n            ret.parentObject = lookup.node;\n            ret.name = PATH.basename(path);\n            lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });\n            ret.exists = true;\n            ret.path = lookup.path;\n            ret.object = lookup.node;\n            ret.name = lookup.node.name;\n            ret.isRoot = lookup.path === \"/\";\n        }\n        catch (e) {\n            ret.error = e.errno;\n        }\n        return ret;\n    },\n    createPath: function (parent, path, canRead, canWrite) {\n        parent = typeof parent === \"string\" ? parent : FS.getPath(parent);\n        var parts = path.split(\"/\").reverse();\n        while (parts.length) {\n            var part = parts.pop();\n            if (!part)\n                continue;\n            var current = PATH.join2(parent, part);\n            try {\n                FS.mkdir(current);\n            }\n            catch (e) { }\n            parent = current;\n        }\n        return current;\n    },\n    createFile: function (parent, name, properties, canRead, canWrite) {\n        var path = PATH.join2(typeof parent === \"string\" ? parent : FS.getPath(parent), name);\n        var mode = FS.getMode(canRead, canWrite);\n        return FS.create(path, mode);\n    },\n    createDataFile: function (parent, name, data, canRead, canWrite, canOwn) {\n        var path = name\n            ? PATH.join2(typeof parent === \"string\" ? parent : FS.getPath(parent), name)\n            : parent;\n        var mode = FS.getMode(canRead, canWrite);\n        var node = FS.create(path, mode);\n        if (data) {\n            if (typeof data === \"string\") {\n                var arr = new Array(data.length);\n                for (var i = 0, len = data.length; i < len; ++i)\n                    arr[i] = data.charCodeAt(i);\n                data = arr;\n            }\n            FS.chmod(node, mode | 146);\n            var stream = FS.open(node, 577);\n            FS.write(stream, data, 0, data.length, 0, canOwn);\n            FS.close(stream);\n            FS.chmod(node, mode);\n        }\n        return node;\n    },\n    createDevice: function (parent, name, input, output) {\n        var path = PATH.join2(typeof parent === \"string\" ? parent : FS.getPath(parent), name);\n        var mode = FS.getMode(!!input, !!output);\n        if (!FS.createDevice.major)\n            FS.createDevice.major = 64;\n        var dev = FS.makedev(FS.createDevice.major++, 0);\n        FS.registerDevice(dev, {\n            open: function (stream) {\n                stream.seekable = false;\n            },\n            close: function (stream) {\n                if (output && output.buffer && output.buffer.length) {\n                    output(10);\n                }\n            },\n            read: function (stream, buffer, offset, length, pos) {\n                var bytesRead = 0;\n                for (var i = 0; i < length; i++) {\n                    var result;\n                    try {\n                        result = input();\n                    }\n                    catch (e) {\n                        throw new FS.ErrnoError(29);\n                    }\n                    if (result === undefined && bytesRead === 0) {\n                        throw new FS.ErrnoError(6);\n                    }\n                    if (result === null || result === undefined)\n                        break;\n                    bytesRead++;\n                    buffer[offset + i] = result;\n                }\n                if (bytesRead) {\n                    stream.node.timestamp = Date.now();\n                }\n                return bytesRead;\n            },\n            write: function (stream, buffer, offset, length, pos) {\n                for (var i = 0; i < length; i++) {\n                    try {\n                        output(buffer[offset + i]);\n                    }\n                    catch (e) {\n                        throw new FS.ErrnoError(29);\n                    }\n                }\n                if (length) {\n                    stream.node.timestamp = Date.now();\n                }\n                return i;\n            },\n        });\n        return FS.mkdev(path, mode, dev);\n    },\n    forceLoadFile: function (obj) {\n        if (obj.isDevice || obj.isFolder || obj.link || obj.contents)\n            return true;\n        if (typeof XMLHttpRequest !== \"undefined\") {\n            throw new Error(\"Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.\");\n        }\n        else if (read_) {\n            try {\n                obj.contents = intArrayFromString(read_(obj.url), true);\n                obj.usedBytes = obj.contents.length;\n            }\n            catch (e) {\n                throw new FS.ErrnoError(29);\n            }\n        }\n        else {\n            throw new Error(\"Cannot load without read() or XMLHttpRequest.\");\n        }\n    },\n    createLazyFile: function (parent, name, url, canRead, canWrite) {\n        function LazyUint8Array() {\n            this.lengthKnown = false;\n            this.chunks = [];\n        }\n        LazyUint8Array.prototype.get = function LazyUint8Array_get(idx) {\n            if (idx > this.length - 1 || idx < 0) {\n                return undefined;\n            }\n            var chunkOffset = idx % this.chunkSize;\n            var chunkNum = (idx / this.chunkSize) | 0;\n            return this.getter(chunkNum)[chunkOffset];\n        };\n        LazyUint8Array.prototype.setDataGetter =\n            function LazyUint8Array_setDataGetter(getter) {\n                this.getter = getter;\n            };\n        LazyUint8Array.prototype.cacheLength =\n            function LazyUint8Array_cacheLength() {\n                var xhr = new XMLHttpRequest();\n                xhr.open(\"HEAD\", url, false);\n                xhr.send(null);\n                if (!((xhr.status >= 200 && xhr.status < 300) || xhr.status === 304))\n                    throw new Error(\"Couldn't load \" + url + \". Status: \" + xhr.status);\n                var datalength = Number(xhr.getResponseHeader(\"Content-length\"));\n                var header;\n                var hasByteServing = (header = xhr.getResponseHeader(\"Accept-Ranges\")) &&\n                    header === \"bytes\";\n                var usesGzip = (header = xhr.getResponseHeader(\"Content-Encoding\")) &&\n                    header === \"gzip\";\n                var chunkSize = 1024 * 1024;\n                if (!hasByteServing)\n                    chunkSize = datalength;\n                var doXHR = function (from, to) {\n                    if (from > to)\n                        throw new Error(\"invalid range (\" + from + \", \" + to + \") or no bytes requested!\");\n                    if (to > datalength - 1)\n                        throw new Error(\"only \" + datalength + \" bytes available! programmer error!\");\n                    var xhr = new XMLHttpRequest();\n                    xhr.open(\"GET\", url, false);\n                    if (datalength !== chunkSize)\n                        xhr.setRequestHeader(\"Range\", \"bytes=\" + from + \"-\" + to);\n                    if (typeof Uint8Array != \"undefined\")\n                        xhr.responseType = \"arraybuffer\";\n                    if (xhr.overrideMimeType) {\n                        xhr.overrideMimeType(\"text/plain; charset=x-user-defined\");\n                    }\n                    xhr.send(null);\n                    if (!((xhr.status >= 200 && xhr.status < 300) || xhr.status === 304))\n                        throw new Error(\"Couldn't load \" + url + \". Status: \" + xhr.status);\n                    if (xhr.response !== undefined) {\n                        return new Uint8Array(xhr.response || []);\n                    }\n                    else {\n                        return intArrayFromString(xhr.responseText || \"\", true);\n                    }\n                };\n                var lazyArray = this;\n                lazyArray.setDataGetter(function (chunkNum) {\n                    var start = chunkNum * chunkSize;\n                    var end = (chunkNum + 1) * chunkSize - 1;\n                    end = Math.min(end, datalength - 1);\n                    if (typeof lazyArray.chunks[chunkNum] === \"undefined\") {\n                        lazyArray.chunks[chunkNum] = doXHR(start, end);\n                    }\n                    if (typeof lazyArray.chunks[chunkNum] === \"undefined\")\n                        throw new Error(\"doXHR failed!\");\n                    return lazyArray.chunks[chunkNum];\n                });\n                if (usesGzip || !datalength) {\n                    chunkSize = datalength = 1;\n                    datalength = this.getter(0).length;\n                    chunkSize = datalength;\n                    out(\"LazyFiles on gzip forces download of the whole file when length is accessed\");\n                }\n                this._length = datalength;\n                this._chunkSize = chunkSize;\n                this.lengthKnown = true;\n            };\n        if (typeof XMLHttpRequest !== \"undefined\") {\n            if (!ENVIRONMENT_IS_WORKER)\n                throw \"Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc\";\n            var lazyArray = new LazyUint8Array();\n            Object.defineProperties(lazyArray, {\n                length: {\n                    get: function () {\n                        if (!this.lengthKnown) {\n                            this.cacheLength();\n                        }\n                        return this._length;\n                    },\n                },\n                chunkSize: {\n                    get: function () {\n                        if (!this.lengthKnown) {\n                            this.cacheLength();\n                        }\n                        return this._chunkSize;\n                    },\n                },\n            });\n            var properties = { isDevice: false, contents: lazyArray };\n        }\n        else {\n            var properties = { isDevice: false, url: url };\n        }\n        var node = FS.createFile(parent, name, properties, canRead, canWrite);\n        if (properties.contents) {\n            node.contents = properties.contents;\n        }\n        else if (properties.url) {\n            node.contents = null;\n            node.url = properties.url;\n        }\n        Object.defineProperties(node, {\n            usedBytes: {\n                get: function () {\n                    return this.contents.length;\n                },\n            },\n        });\n        var stream_ops = {};\n        var keys = Object.keys(node.stream_ops);\n        keys.forEach(function (key) {\n            var fn = node.stream_ops[key];\n            stream_ops[key] = function forceLoadLazyFile() {\n                FS.forceLoadFile(node);\n                return fn.apply(null, arguments);\n            };\n        });\n        stream_ops.read = function stream_ops_read(stream, buffer, offset, length, position) {\n            FS.forceLoadFile(node);\n            var contents = stream.node.contents;\n            if (position >= contents.length)\n                return 0;\n            var size = Math.min(contents.length - position, length);\n            if (contents.slice) {\n                for (var i = 0; i < size; i++) {\n                    buffer[offset + i] = contents[position + i];\n                }\n            }\n            else {\n                for (var i = 0; i < size; i++) {\n                    buffer[offset + i] = contents.get(position + i);\n                }\n            }\n            return size;\n        };\n        node.stream_ops = stream_ops;\n        return node;\n    },\n    createPreloadedFile: function (parent, name, url, canRead, canWrite, onload, onerror, dontCreateFile, canOwn, preFinish) {\n        Browser.init();\n        var fullname = name ? PATH_FS.resolve(PATH.join2(parent, name)) : parent;\n        var dep = getUniqueRunDependency(\"cp \" + fullname);\n        function processData(byteArray) {\n            function finish(byteArray) {\n                if (preFinish)\n                    preFinish();\n                if (!dontCreateFile) {\n                    FS.createDataFile(parent, name, byteArray, canRead, canWrite, canOwn);\n                }\n                if (onload)\n                    onload();\n                removeRunDependency(dep);\n            }\n            var handled = false;\n            Module[\"preloadPlugins\"].forEach(function (plugin) {\n                if (handled)\n                    return;\n                if (plugin[\"canHandle\"](fullname)) {\n                    plugin[\"handle\"](byteArray, fullname, finish, function () {\n                        if (onerror)\n                            onerror();\n                        removeRunDependency(dep);\n                    });\n                    handled = true;\n                }\n            });\n            if (!handled)\n                finish(byteArray);\n        }\n        addRunDependency(dep);\n        if (typeof url == \"string\") {\n            asyncLoad(url, function (byteArray) {\n                processData(byteArray);\n            }, onerror);\n        }\n        else {\n            processData(url);\n        }\n    },\n    indexedDB: function () {\n        return (window.indexedDB ||\n            window.mozIndexedDB ||\n            window.webkitIndexedDB ||\n            window.msIndexedDB);\n    },\n    DB_NAME: function () {\n        return \"EM_FS_\" + window.location.pathname;\n    },\n    DB_VERSION: 20,\n    DB_STORE_NAME: \"FILE_DATA\",\n    saveFilesToDB: function (paths, onload, onerror) {\n        onload = onload || function () { };\n        onerror = onerror || function () { };\n        var indexedDB = FS.indexedDB();\n        try {\n            var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);\n        }\n        catch (e) {\n            return onerror(e);\n        }\n        openRequest.onupgradeneeded = function openRequest_onupgradeneeded() {\n            out(\"creating db\");\n            var db = openRequest.result;\n            db.createObjectStore(FS.DB_STORE_NAME);\n        };\n        openRequest.onsuccess = function openRequest_onsuccess() {\n            var db = openRequest.result;\n            var transaction = db.transaction([FS.DB_STORE_NAME], \"readwrite\");\n            var files = transaction.objectStore(FS.DB_STORE_NAME);\n            var ok = 0, fail = 0, total = paths.length;\n            function finish() {\n                if (fail == 0)\n                    onload();\n                else\n                    onerror();\n            }\n            paths.forEach(function (path) {\n                var putRequest = files.put(FS.analyzePath(path).object.contents, path);\n                putRequest.onsuccess = function putRequest_onsuccess() {\n                    ok++;\n                    if (ok + fail == total)\n                        finish();\n                };\n                putRequest.onerror = function putRequest_onerror() {\n                    fail++;\n                    if (ok + fail == total)\n                        finish();\n                };\n            });\n            transaction.onerror = onerror;\n        };\n        openRequest.onerror = onerror;\n    },\n    loadFilesFromDB: function (paths, onload, onerror) {\n        onload = onload || function () { };\n        onerror = onerror || function () { };\n        var indexedDB = FS.indexedDB();\n        try {\n            var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);\n        }\n        catch (e) {\n            return onerror(e);\n        }\n        openRequest.onupgradeneeded = onerror;\n        openRequest.onsuccess = function openRequest_onsuccess() {\n            var db = openRequest.result;\n            try {\n                var transaction = db.transaction([FS.DB_STORE_NAME], \"readonly\");\n            }\n            catch (e) {\n                onerror(e);\n                return;\n            }\n            var files = transaction.objectStore(FS.DB_STORE_NAME);\n            var ok = 0, fail = 0, total = paths.length;\n            function finish() {\n                if (fail == 0)\n                    onload();\n                else\n                    onerror();\n            }\n            paths.forEach(function (path) {\n                var getRequest = files.get(path);\n                getRequest.onsuccess = function getRequest_onsuccess() {\n                    if (FS.analyzePath(path).exists) {\n                        FS.unlink(path);\n                    }\n                    FS.createDataFile(PATH.dirname(path), PATH.basename(path), getRequest.result, true, true, true);\n                    ok++;\n                    if (ok + fail == total)\n                        finish();\n                };\n                getRequest.onerror = function getRequest_onerror() {\n                    fail++;\n                    if (ok + fail == total)\n                        finish();\n                };\n            });\n            transaction.onerror = onerror;\n        };\n        openRequest.onerror = onerror;\n    },\n};\nvar SYSCALLS = {\n    mappings: {},\n    DEFAULT_POLLMASK: 5,\n    calculateAt: function (dirfd, path, allowEmpty) {\n        if (path[0] === \"/\") {\n            return path;\n        }\n        var dir;\n        if (dirfd === -100) {\n            dir = FS.cwd();\n        }\n        else {\n            var dirstream = FS.getStream(dirfd);\n            if (!dirstream)\n                throw new FS.ErrnoError(8);\n            dir = dirstream.path;\n        }\n        if (path.length == 0) {\n            if (!allowEmpty) {\n                throw new FS.ErrnoError(44);\n            }\n            return dir;\n        }\n        return PATH.join2(dir, path);\n    },\n    doStat: function (func, path, buf) {\n        try {\n            var stat = func(path);\n        }\n        catch (e) {\n            if (e &&\n                e.node &&\n                PATH.normalize(path) !== PATH.normalize(FS.getPath(e.node))) {\n                return -54;\n            }\n            throw e;\n        }\n        HEAP32[buf >> 2] = stat.dev;\n        HEAP32[(buf + 4) >> 2] = 0;\n        HEAP32[(buf + 8) >> 2] = stat.ino;\n        HEAP32[(buf + 12) >> 2] = stat.mode;\n        HEAP32[(buf + 16) >> 2] = stat.nlink;\n        HEAP32[(buf + 20) >> 2] = stat.uid;\n        HEAP32[(buf + 24) >> 2] = stat.gid;\n        HEAP32[(buf + 28) >> 2] = stat.rdev;\n        HEAP32[(buf + 32) >> 2] = 0;\n        (tempI64 = [\n            stat.size >>> 0,\n            ((tempDouble = stat.size),\n                +Math.abs(tempDouble) >= 1\n                    ? tempDouble > 0\n                        ? (Math.min(+Math.floor(tempDouble / 4294967296), 4294967295) | 0) >>>\n                            0\n                        : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>>\n                            0\n                    : 0),\n        ]),\n            (HEAP32[(buf + 40) >> 2] = tempI64[0]),\n            (HEAP32[(buf + 44) >> 2] = tempI64[1]);\n        HEAP32[(buf + 48) >> 2] = 4096;\n        HEAP32[(buf + 52) >> 2] = stat.blocks;\n        HEAP32[(buf + 56) >> 2] = (stat.atime.getTime() / 1e3) | 0;\n        HEAP32[(buf + 60) >> 2] = 0;\n        HEAP32[(buf + 64) >> 2] = (stat.mtime.getTime() / 1e3) | 0;\n        HEAP32[(buf + 68) >> 2] = 0;\n        HEAP32[(buf + 72) >> 2] = (stat.ctime.getTime() / 1e3) | 0;\n        HEAP32[(buf + 76) >> 2] = 0;\n        (tempI64 = [\n            stat.ino >>> 0,\n            ((tempDouble = stat.ino),\n                +Math.abs(tempDouble) >= 1\n                    ? tempDouble > 0\n                        ? (Math.min(+Math.floor(tempDouble / 4294967296), 4294967295) | 0) >>>\n                            0\n                        : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>>\n                            0\n                    : 0),\n        ]),\n            (HEAP32[(buf + 80) >> 2] = tempI64[0]),\n            (HEAP32[(buf + 84) >> 2] = tempI64[1]);\n        return 0;\n    },\n    doMsync: function (addr, stream, len, flags, offset) {\n        var buffer = HEAPU8.slice(addr, addr + len);\n        FS.msync(stream, buffer, offset, len, flags);\n    },\n    doMkdir: function (path, mode) {\n        path = PATH.normalize(path);\n        if (path[path.length - 1] === \"/\")\n            path = path.substr(0, path.length - 1);\n        FS.mkdir(path, mode, 0);\n        return 0;\n    },\n    doMknod: function (path, mode, dev) {\n        switch (mode & 61440) {\n            case 32768:\n            case 8192:\n            case 24576:\n            case 4096:\n            case 49152:\n                break;\n            default:\n                return -28;\n        }\n        FS.mknod(path, mode, dev);\n        return 0;\n    },\n    doReadlink: function (path, buf, bufsize) {\n        if (bufsize <= 0)\n            return -28;\n        var ret = FS.readlink(path);\n        var len = Math.min(bufsize, lengthBytesUTF8(ret));\n        var endChar = HEAP8[buf + len];\n        stringToUTF8(ret, buf, bufsize + 1);\n        HEAP8[buf + len] = endChar;\n        return len;\n    },\n    doAccess: function (path, amode) {\n        if (amode & ~7) {\n            return -28;\n        }\n        var lookup = FS.lookupPath(path, { follow: true });\n        var node = lookup.node;\n        if (!node) {\n            return -44;\n        }\n        var perms = \"\";\n        if (amode & 4)\n            perms += \"r\";\n        if (amode & 2)\n            perms += \"w\";\n        if (amode & 1)\n            perms += \"x\";\n        if (perms && FS.nodePermissions(node, perms)) {\n            return -2;\n        }\n        return 0;\n    },\n    doDup: function (path, flags, suggestFD) {\n        var suggest = FS.getStream(suggestFD);\n        if (suggest)\n            FS.close(suggest);\n        return FS.open(path, flags, 0, suggestFD, suggestFD).fd;\n    },\n    doReadv: function (stream, iov, iovcnt, offset) {\n        var ret = 0;\n        for (var i = 0; i < iovcnt; i++) {\n            var ptr = HEAP32[(iov + i * 8) >> 2];\n            var len = HEAP32[(iov + (i * 8 + 4)) >> 2];\n            var curr = FS.read(stream, HEAP8, ptr, len, offset);\n            if (curr < 0)\n                return -1;\n            ret += curr;\n            if (curr < len)\n                break;\n        }\n        return ret;\n    },\n    doWritev: function (stream, iov, iovcnt, offset) {\n        var ret = 0;\n        for (var i = 0; i < iovcnt; i++) {\n            var ptr = HEAP32[(iov + i * 8) >> 2];\n            var len = HEAP32[(iov + (i * 8 + 4)) >> 2];\n            var curr = FS.write(stream, HEAP8, ptr, len, offset);\n            if (curr < 0)\n                return -1;\n            ret += curr;\n        }\n        return ret;\n    },\n    varargs: undefined,\n    get: function () {\n        SYSCALLS.varargs += 4;\n        var ret = HEAP32[(SYSCALLS.varargs - 4) >> 2];\n        return ret;\n    },\n    getStr: function (ptr) {\n        var ret = UTF8ToString(ptr);\n        return ret;\n    },\n    getStreamFromFD: function (fd) {\n        var stream = FS.getStream(fd);\n        if (!stream)\n            throw new FS.ErrnoError(8);\n        return stream;\n    },\n    get64: function (low, high) {\n        return low;\n    },\n};\nfunction _fd_close(fd) {\n    try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        FS.close(stream);\n        return 0;\n    }\n    catch (e) {\n        if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError))\n            throw e;\n        return e.errno;\n    }\n}\nfunction _fd_read(fd, iov, iovcnt, pnum) {\n    try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        var num = SYSCALLS.doReadv(stream, iov, iovcnt);\n        HEAP32[pnum >> 2] = num;\n        return 0;\n    }\n    catch (e) {\n        if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError))\n            throw e;\n        return e.errno;\n    }\n}\nfunction _fd_seek(fd, offset_low, offset_high, whence, newOffset) {\n    try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        var HIGH_OFFSET = 4294967296;\n        var offset = offset_high * HIGH_OFFSET + (offset_low >>> 0);\n        var DOUBLE_LIMIT = 9007199254740992;\n        if (offset <= -DOUBLE_LIMIT || offset >= DOUBLE_LIMIT) {\n            return -61;\n        }\n        FS.llseek(stream, offset, whence);\n        (tempI64 = [\n            stream.position >>> 0,\n            ((tempDouble = stream.position),\n                +Math.abs(tempDouble) >= 1\n                    ? tempDouble > 0\n                        ? (Math.min(+Math.floor(tempDouble / 4294967296), 4294967295) | 0) >>>\n                            0\n                        : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>>\n                            0\n                    : 0),\n        ]),\n            (HEAP32[newOffset >> 2] = tempI64[0]),\n            (HEAP32[(newOffset + 4) >> 2] = tempI64[1]);\n        if (stream.getdents && offset === 0 && whence === 0)\n            stream.getdents = null;\n        return 0;\n    }\n    catch (e) {\n        if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError))\n            throw e;\n        return e.errno;\n    }\n}\nfunction _fd_write(fd, iov, iovcnt, pnum) {\n    try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        var num = SYSCALLS.doWritev(stream, iov, iovcnt);\n        HEAP32[pnum >> 2] = num;\n        return 0;\n    }\n    catch (e) {\n        if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError))\n            throw e;\n        return e.errno;\n    }\n}\nfunction _proc_exit(code) {\n    procExit(code);\n}\nvar FSNode = function (parent, name, mode, rdev) {\n    if (!parent) {\n        parent = this;\n    }\n    this.parent = parent;\n    this.mount = parent.mount;\n    this.mounted = null;\n    this.id = FS.nextInode++;\n    this.name = name;\n    this.mode = mode;\n    this.node_ops = {};\n    this.stream_ops = {};\n    this.rdev = rdev;\n};\nvar readMode = 292 | 73;\nvar writeMode = 146;\nObject.defineProperties(FSNode.prototype, {\n    read: {\n        get: function () {\n            return (this.mode & readMode) === readMode;\n        },\n        set: function (val) {\n            val ? (this.mode |= readMode) : (this.mode &= ~readMode);\n        },\n    },\n    write: {\n        get: function () {\n            return (this.mode & writeMode) === writeMode;\n        },\n        set: function (val) {\n            val ? (this.mode |= writeMode) : (this.mode &= ~writeMode);\n        },\n    },\n    isFolder: {\n        get: function () {\n            return FS.isDir(this.mode);\n        },\n    },\n    isDevice: {\n        get: function () {\n            return FS.isChrdev(this.mode);\n        },\n    },\n});\nFS.FSNode = FSNode;\nFS.staticInit();\nfunction intArrayFromString(stringy, dontAddNull, length) {\n    var len = length > 0 ? length : lengthBytesUTF8(stringy) + 1;\n    var u8array = new Array(len);\n    var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);\n    if (dontAddNull)\n        u8array.length = numBytesWritten;\n    return u8array;\n}\nvar asmLibraryArg = {\n    fd_close: _fd_close,\n    fd_read: _fd_read,\n    fd_seek: _fd_seek,\n    fd_write: _fd_write,\n    proc_exit: _proc_exit,\n};\nvar asm = createWasm();\nvar _SchnorrQ_KeyGeneration = (Module[\"_SchnorrQ_KeyGeneration\"] = function () {\n    return (_SchnorrQ_KeyGeneration = Module[\"_SchnorrQ_KeyGeneration\"] =\n        Module[\"asm\"][\"SchnorrQ_KeyGeneration\"]).apply(null, arguments);\n});\nvar _KangarooTwelve = (Module[\"_KangarooTwelve\"] = function () {\n    return (_KangarooTwelve = Module[\"_KangarooTwelve\"] =\n        Module[\"asm\"][\"KangarooTwelve\"]).apply(null, arguments);\n});\nvar _SchnorrQ_Sign = (Module[\"_SchnorrQ_Sign\"] = function () {\n    return (_SchnorrQ_Sign = Module[\"_SchnorrQ_Sign\"] =\n        Module[\"asm\"][\"SchnorrQ_Sign\"]).apply(null, arguments);\n});\nvar _free = (Module[\"_free\"] = function () {\n    return (_free = Module[\"_free\"] = Module[\"asm\"][\"free\"]).apply(null, arguments);\n});\nvar _SchnorrQ_Verify = (Module[\"_SchnorrQ_Verify\"] = function () {\n    return (_SchnorrQ_Verify = Module[\"_SchnorrQ_Verify\"] =\n        Module[\"asm\"][\"SchnorrQ_Verify\"]).apply(null, arguments);\n});\nvar _CompressedPublicKeyGeneration = (Module[\"_CompressedPublicKeyGeneration\"] =\n    function () {\n        return (_CompressedPublicKeyGeneration = Module[\"_CompressedPublicKeyGeneration\"] =\n            Module[\"asm\"][\"CompressedPublicKeyGeneration\"]).apply(null, arguments);\n    });\nvar _CompressedKeyGeneration = (Module[\"_CompressedKeyGeneration\"] =\n    function () {\n        return (_CompressedKeyGeneration = Module[\"_CompressedKeyGeneration\"] =\n            Module[\"asm\"][\"CompressedKeyGeneration\"]).apply(null, arguments);\n    });\nvar _CompressedSecretAgreement = (Module[\"_CompressedSecretAgreement\"] =\n    function () {\n        return (_CompressedSecretAgreement = Module[\"_CompressedSecretAgreement\"] =\n            Module[\"asm\"][\"CompressedSecretAgreement\"]).apply(null, arguments);\n    });\nvar _PublicKeyGeneration = (Module[\"_PublicKeyGeneration\"] = function () {\n    return (_PublicKeyGeneration = Module[\"_PublicKeyGeneration\"] =\n        Module[\"asm\"][\"PublicKeyGeneration\"]).apply(null, arguments);\n});\nvar _KeyGeneration = (Module[\"_KeyGeneration\"] = function () {\n    return (_KeyGeneration = Module[\"_KeyGeneration\"] =\n        Module[\"asm\"][\"KeyGeneration\"]).apply(null, arguments);\n});\nvar _SecretAgreement = (Module[\"_SecretAgreement\"] = function () {\n    return (_SecretAgreement = Module[\"_SecretAgreement\"] =\n        Module[\"asm\"][\"SecretAgreement\"]).apply(null, arguments);\n});\nvar __initialize = (Module[\"__initialize\"] = function () {\n    return (__initialize = Module[\"__initialize\"] =\n        Module[\"asm\"][\"_initialize\"]).apply(null, arguments);\n});\nvar _malloc = (Module[\"_malloc\"] = function () {\n    return (_malloc = Module[\"_malloc\"] = Module[\"asm\"][\"malloc\"]).apply(null, arguments);\n});\nvar calledRun;\nfunction ExitStatus(status) {\n    this.name = \"ExitStatus\";\n    this.message = \"Program terminated with exit(\" + status + \")\";\n    this.status = status;\n}\nvar calledMain = false;\nvar mainArgs = undefined;\ndependenciesFulfilled = function runCaller() {\n    if (!calledRun)\n        run();\n    if (!calledRun)\n        dependenciesFulfilled = runCaller;\n};\nfunction callMain(args) {\n    var entryFunction = Module[\"__initialize\"];\n    mainArgs = [thisProgram].concat(args);\n    try {\n        entryFunction();\n        var ret = 0;\n        exit(ret, true);\n        return ret;\n    }\n    catch (e) {\n        return handleException(e);\n    }\n    finally {\n        calledMain = true;\n    }\n}\nfunction run(args) {\n    args = args || arguments_;\n    if (runDependencies > 0) {\n        return;\n    }\n    preRun();\n    if (runDependencies > 0) {\n        return;\n    }\n    function doRun() {\n        if (calledRun)\n            return;\n        calledRun = true;\n        Module[\"calledRun\"] = true;\n        if (ABORT)\n            return;\n        initRuntime();\n        preMain();\n        if (Module[\"onRuntimeInitialized\"])\n            Module[\"onRuntimeInitialized\"]();\n        if (shouldRunNow)\n            callMain(args);\n        postRun();\n    }\n    if (Module[\"setStatus\"]) {\n        Module[\"setStatus\"](\"Running...\");\n        setTimeout(function () {\n            setTimeout(function () {\n                Module[\"setStatus\"](\"\");\n            }, 1);\n            doRun();\n        }, 1);\n    }\n    else {\n        doRun();\n    }\n}\nModule[\"run\"] = run;\nfunction exit(status, implicit) {\n    EXITSTATUS = status;\n    if (keepRuntimeAlive()) {\n    }\n    else {\n        exitRuntime();\n    }\n    procExit(status);\n}\nfunction procExit(code) {\n    EXITSTATUS = code;\n    if (!keepRuntimeAlive()) {\n        if (Module[\"onExit\"])\n            Module[\"onExit\"](code);\n        ABORT = true;\n    }\n    quit_(code, new ExitStatus(code));\n}\nif (Module[\"preInit\"]) {\n    if (typeof Module[\"preInit\"] == \"function\")\n        Module[\"preInit\"] = [Module[\"preInit\"]];\n    while (Module[\"preInit\"].length > 0) {\n        Module[\"preInit\"].pop()();\n    }\n}\nvar shouldRunNow = true;\nif (Module[\"noInitialRun\"])\n    shouldRunNow = false;\nrun();\nexports.default = Module;\n"],"names":["Object","defineProperty","exports","value","key","Module","moduleOverrides","hasOwnProperty","read_","readAsync","arguments_","thisProgram","quit_","status","toThrow","ENVIRONMENT_IS_WEB","window","ENVIRONMENT_IS_WORKER","importScripts","ENVIRONMENT_IS_NODE","process","versions","node","scriptDirectory","self","location","href","document","currentScript","src","indexOf","substr","replace","lastIndexOf","url","xhr","XMLHttpRequest","open","send","responseText","responseType","Uint8Array","response","onload","onerror","out","console","log","bind","err","warn","wasmMemory","noExitRuntime","WebAssembly","abort","EXITSTATUS","ABORT","buffer","HEAP8","HEAPU8","HEAP32","UTF8Decoder","TextDecoder","undefined","UTF8ArrayToString","heap","idx","maxBytesToRead","endIdx","endPtr","subarray","decode","str","u0","u1","u2","String","fromCharCode","ch","stringToUTF8Array","outIdx","maxBytesToWrite","startIdx","i","length","u","charCodeAt","lengthBytesUTF8","len","wasmTable","__ATPRERUN__","__ATINIT__","__ATMAIN__","__ATPOSTRUN__","runtimeKeepaliveCounter","keepRuntimeAlive","runDependencies","runDependencyWatcher","dependenciesFulfilled","addRunDependency","id","removeRunDependency","clearInterval","callback","what","RuntimeError","wasmBinaryFile","path","tempDouble","tempI64","encoded","binaryString","atob","Buffer","from","toString","bytes","callRuntimeCallbacks","callbacks","shift","func","arg","getWasmTableEntry","startsWith","wasmTableMirror","funcPtr","get","PATH","splitPath","filename","exec","slice","normalizeArray","parts","allowAboveRoot","up","last","splice","unshift","normalize","isAbsolute","charAt","trailingSlash","split","filter","p","join","dirname","result","root","dir","basename","lastSlash","extname","paths","Array","prototype","call","arguments","join2","l","r","PATH_FS","resolve","resolvedPath","resolvedAbsolute","FS","cwd","TypeError","relative","to","trim","arr","start","end","fromParts","toParts","Math","min","samePartsLength","outputParts","push","concat","TTY","ttys","init","shutdown","register","dev","ops","input","output","registerDevice","stream_ops","stream","tty","rdev","ErrnoError","seekable","close","flush","read","offset","pos","get_char","bytesRead","e","timestamp","Date","now","write","put_char","default_tty_ops","buf","alloc","nodeFS","readSync","stdin","fd","includes","prompt","readline","intArrayFromString","val","default_tty1_ops","MEMFS","ops_table","mount","createNode","parent","name","mode","isBlkdev","isFIFO","getattr","node_ops","setattr","lookup","mknod","rename","unlink","rmdir","readdir","symlink","llseek","file","allocate","mmap","msync","link","readlink","chrdev","chrdev_stream_ops","isDir","contents","isFile","usedBytes","isLink","isChrdev","getFileDataAsTypedArray","expandFileStorage","newCapacity","prevCapacity","max","oldContents","set","resizeFileStorage","newSize","attr","ino","nlink","uid","gid","size","atime","mtime","ctime","blksize","blocks","ceil","genericErrors","old_node","new_dir","new_name","new_node","lookupNode","entries","newname","oldpath","position","canOwn","whence","address","prot","flags","ptr","allocated","byteOffset","mmapFlags","asyncLoad","noRunDep","dep","arrayBuffer","text","event","mounts","devices","streams","nextInode","nameTable","currentPath","initialized","ignorePermissions","filesystems","syncFSRequests","lookupPath","opts","defaults","follow_mount","recurse_count","current","current_path","islast","isMountpoint","mounted","follow","count","getPath","isRoot","mountpoint","hashName","parentid","hash","hashAddNode","name_next","hashRemoveNode","errCode","mayLookup","nodeName","FSNode","destroyNode","isSocket","flagModes","w","a","modeStringToFlags","Error","flagsToPermissionString","flag","perms","nodePermissions","mayCreate","mayDelete","isdir","errno","mayOpen","MAX_OPEN_FDS","nextfd","fd_start","fd_end","getStream","createStream","FSStream","object","this","isRead","isWrite","isAppend","newStream","closeStream","device","getDevice","major","minor","makedev","ma","mi","getMounts","check","m","pop","apply","syncfs","populate","completed","doCallback","done","errored","forEach","type","pseudo","mountRoot","unmount","keys","next","create","mkdir","mkdirTree","dirs","d","mkdev","newpath","old_path","new_path","old_dir","old_dirname","new_dirname","old_name","stat","dontFollow","lstat","chmod","lchmod","fchmod","chown","lchown","fchown","truncate","ftruncate","utime","created","ungotten","error","readFiles","isClosed","getdents","seeking","bytesWritten","munmap","ioctl","cmd","readFile","encoding","ret","writeFile","data","actualNumBytes","ArrayBuffer","isView","byteLength","chdir","createDefaultDirectories","createDefaultDevices","random_device","crypto","randomBuffer","getRandomValues","getRandomDevice","createDevice","createSpecialDirectories","proc_self","createStandardStreams","ensureErrnoError","setErrno","message","constructor","code","stack","staticInit","quit","fflush","getMode","canRead","canWrite","findObject","dontResolveLastLink","analyzePath","exists","parentExists","parentPath","parentObject","createPath","reverse","part","createFile","properties","createDataFile","forceLoadFile","obj","isDevice","isFolder","createLazyFile","LazyUint8Array","lengthKnown","chunks","chunkOffset","chunkSize","chunkNum","getter","setDataGetter","cacheLength","header","datalength","Number","getResponseHeader","hasByteServing","usesGzip","lazyArray","setRequestHeader","overrideMimeType","doXHR","_length","_chunkSize","defineProperties","fn","createPreloadedFile","dontCreateFile","preFinish","Browser","fullname","processData","byteArray","finish","handled","plugin","indexedDB","mozIndexedDB","webkitIndexedDB","msIndexedDB","DB_NAME","pathname","DB_VERSION","DB_STORE_NAME","saveFilesToDB","openRequest","onupgradeneeded","createObjectStore","onsuccess","transaction","files","objectStore","ok","fail","total","putRequest","put","loadFilesFromDB","db","getRequest","SYSCALLS","mappings","DEFAULT_POLLMASK","calculateAt","dirfd","allowEmpty","dirstream","doStat","abs","floor","getTime","doMsync","addr","doMkdir","doMknod","doReadlink","bufsize","endChar","doAccess","amode","doDup","suggestFD","suggest","doReadv","iov","iovcnt","curr","doWritev","varargs","getStr","UTF8ToString","getStreamFromFD","get64","low","high","readMode","writeMode","stringy","dontAddNull","u8array","numBytesWritten","calledRun","asmLibraryArg","fd_close","fd_read","pnum","num","fd_seek","offset_low","offset_high","newOffset","DOUBLE_LIMIT","fd_write","proc_exit","procExit","receiver","info","env","wasi_snapshot_preview1","receiveInstance","instance","module","Int8Array","Int16Array","Int32Array","Uint16Array","Uint32Array","Float32Array","Float64Array","receiveInstantiationResult","instantiate","then","reason","createWasm","ExitStatus","callMain","args","entryFunction","implicit","exit","handleException","run","doRun","shouldRunNow","cb","postRun","preRun","setTimeout","runCaller"],"sourceRoot":""}